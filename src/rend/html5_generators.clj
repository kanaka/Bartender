(ns rend.html5-generators
   (:require [clojure.test.check.generators :as gen]
             [com.gfredericks.test.chuck.generators :as chuck]
             [instacheck.generators :as igen]
             [rend.misc-generators :as rgen]))

;; Generated by mend.cli

(defn- html5-generators-part-0 [gmap weights]
  (let [
        gen-attr-val-img__sizes
        (igen/freq [
          [(get weights [:attr-val-img__sizes :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-img__sizes :alt 1] 100)
            (gen/return "STUB Valid source size list")]])
        gmap (assoc gmap :attr-val-img__sizes gen-attr-val-img__sizes)

        gen-non-negative-integer
        (chuck/string-from-regex #"[0-9]+")
        gmap (assoc gmap :non-negative-integer gen-non-negative-integer)

        gen-attr-val-textarea__maxlength
        (igen/freq [
          [(get weights [:attr-val-textarea__maxlength :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-textarea__maxlength :alt 1] 100)
            (:non-negative-integer gmap)]])
        gmap (assoc gmap :attr-val-textarea__maxlength gen-attr-val-textarea__maxlength)

        gen-length-unit
        (igen/freq [
          [(get weights [:length-unit :alt 0] 100)
            (gen/return "em")]
          [(get weights [:length-unit :alt 1] 100)
            (gen/return "ex")]
          [(get weights [:length-unit :alt 2] 100)
            (gen/return "ch")]
          [(get weights [:length-unit :alt 3] 100)
            (gen/return "ic")]
          [(get weights [:length-unit :alt 4] 100)
            (gen/return "rem")]
          [(get weights [:length-unit :alt 5] 100)
            (gen/return "lh")]
          [(get weights [:length-unit :alt 6] 100)
            (gen/return "rlh")]
          [(get weights [:length-unit :alt 7] 100)
            (gen/return "vh")]
          [(get weights [:length-unit :alt 8] 100)
            (gen/return "vw")]
          [(get weights [:length-unit :alt 9] 100)
            (gen/return "vi")]
          [(get weights [:length-unit :alt 10] 100)
            (gen/return "vb")]
          [(get weights [:length-unit :alt 11] 100)
            (gen/return "vmin")]
          [(get weights [:length-unit :alt 12] 100)
            (gen/return "vmax")]
          [(get weights [:length-unit :alt 13] 100)
            (gen/return "px")]
          [(get weights [:length-unit :alt 14] 100)
            (gen/return "mm")]
          [(get weights [:length-unit :alt 15] 100)
            (gen/return "q")]
          [(get weights [:length-unit :alt 16] 100)
            (gen/return "cm")]
          [(get weights [:length-unit :alt 17] 100)
            (gen/return "in")]
          [(get weights [:length-unit :alt 18] 100)
            (gen/return "pt")]
          [(get weights [:length-unit :alt 19] 100)
            (gen/return "pc")]
          [(get weights [:length-unit :alt 20] 100)
            (gen/return "mozmm")]])
        gmap (assoc gmap :length-unit gen-length-unit)

        gen-attr-val-canvas__height
        (igen/freq [
          [(get weights [:attr-val-canvas__height :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-canvas__height :alt 1] 100)
            (:non-negative-integer gmap)]
          [(get weights [:attr-val-canvas__height :alt 2] 100)
            (gen/tuple
              (:non-negative-integer gmap)
              (igen/freq [
                [(get weights [:attr-val-canvas__height :alt 2 :cat 1 :alt 0] 100)
                  (:length-unit gmap)]
                [(get weights [:attr-val-canvas__height :alt 2 :cat 1 :alt 1] 100)
                  (gen/return "%")]]))]])
        gmap (assoc gmap :attr-val-canvas__height gen-attr-val-canvas__height)

        gen-attr-val-img__crossorigin
        (igen/freq [
          [(get weights [:attr-val-img__crossorigin :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-img__crossorigin :alt 1] 100)
            (gen/return "anonymous")]
          [(get weights [:attr-val-img__crossorigin :alt 2] 100)
            (gen/return "use-credentials")]])
        gmap (assoc gmap :attr-val-img__crossorigin gen-attr-val-img__crossorigin)

        gen-attribute-data
        (chuck/string-from-regex #"[^\"]*")
        gmap (assoc gmap :attribute-data gen-attribute-data)

        gen-attr-val-input__dirname
        (igen/freq [
          [(get weights [:attr-val-input__dirname :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__dirname :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-input__dirname gen-attr-val-input__dirname)

        gen-opt-boolean
        (igen/freq [
          [(get weights [:opt-boolean :alt 0] 100)
            (gen/return "")]
          [(get weights [:opt-boolean :alt 1] 100)
            (gen/return "=\"\"")]
          [(get weights [:opt-boolean :alt 2] 100)
            (gen/return "=\"true\"")]
          [(get weights [:opt-boolean :alt 3] 100)
            (gen/return "=\"false\"")]])
        gmap (assoc gmap :opt-boolean gen-opt-boolean)

        gen-attr-val-keygen__name
        (igen/freq [
          [(get weights [:attr-val-keygen__name :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-keygen__name :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-keygen__name gen-attr-val-keygen__name)

        gen-attr-val-global__translate
        (igen/freq [
          [(get weights [:attr-val-global__translate :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-global__translate :alt 1] 100)
            (gen/return "no")]
          [(get weights [:attr-val-global__translate :alt 2] 100)
            (gen/return "yes")]])
        gmap (assoc gmap :attr-val-global__translate gen-attr-val-global__translate)

        gen-rS
        (gen/tuple (gen/return " "))
        gmap (assoc gmap :rS gen-rS)

        gen-name
        (chuck/string-from-regex #"[A-Za-z_:][A-Za-z_:\-.0-9]*")
        gmap (assoc gmap :name gen-name)

        gen-attr-val-global__accesskey
        (igen/freq [
          [(get weights [:attr-val-global__accesskey :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-global__accesskey :alt 1] 100)
            (gen/tuple
              (:name gmap)
              (gen/vector
                (gen/tuple
                  (:rS gmap)
                  (:name gmap))))]
          [(get weights [:attr-val-global__accesskey :alt 2] 100)
            (gen/return "STUB case-sensitive")]])
        gmap (assoc gmap :attr-val-global__accesskey gen-attr-val-global__accesskey)

        gen-attr-val-global__style
        (gen/return "")
        gmap (assoc gmap :attr-val-global__style gen-attr-val-global__style)

        gen-attr-val-global__contenteditable
        (igen/freq [
          [(get weights [:attr-val-global__contenteditable :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-global__contenteditable :alt 1] 100)
            (gen/return "false")]
          [(get weights [:attr-val-global__contenteditable :alt 2] 100)
            (gen/return "true")]])
        gmap (assoc gmap :attr-val-global__contenteditable gen-attr-val-global__contenteditable)

        gen-attr-val-global__draggable
        (igen/freq [
          [(get weights [:attr-val-global__draggable :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-global__draggable :alt 1] 100)
            (gen/return "false")]
          [(get weights [:attr-val-global__draggable :alt 2] 100)
            (gen/return "true")]])
        gmap (assoc gmap :attr-val-global__draggable gen-attr-val-global__draggable)

        gen-attr-val-global__dir
        (igen/freq [
          [(get weights [:attr-val-global__dir :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-global__dir :alt 1] 100)
            (gen/return "auto")]
          [(get weights [:attr-val-global__dir :alt 2] 100)
            (gen/return "ltr")]
          [(get weights [:attr-val-global__dir :alt 3] 100)
            (gen/return "rtl")]])
        gmap (assoc gmap :attr-val-global__dir gen-attr-val-global__dir)

        gen-attr-val-global__id
        (igen/freq [
          [(get weights [:attr-val-global__id :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-global__id :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-global__id gen-attr-val-global__id)

        gen-integer
        (chuck/string-from-regex #"-?[0-9]+")
        gmap (assoc gmap :integer gen-integer)

        gen-attr-val-global__spellcheck
        (igen/freq [
          [(get weights [:attr-val-global__spellcheck :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-global__spellcheck :alt 1] 100)
            (gen/return "false")]
          [(get weights [:attr-val-global__spellcheck :alt 2] 100)
            (gen/return "true")]])
        gmap (assoc gmap :attr-val-global__spellcheck gen-attr-val-global__spellcheck)

        gen-lang
        (chuck/string-from-regex #"[a-z][a-z](?:-[A-Za-z][A-Za-z])?")
        gmap (assoc gmap :lang gen-lang)

        gen-attr-val-global__title
        (igen/freq [
          [(get weights [:attr-val-global__title :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-global__title :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-global__title gen-attr-val-global__title)

        gen-role-attribute
        (gen/tuple
          (gen/return "role=\"")
          (:attribute-data gmap)
          (gen/return "\""))
        gmap (assoc gmap :role-attribute gen-role-attribute)

        gen-attr-val-global__lang
        (igen/freq [
          [(get weights [:attr-val-global__lang :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-global__lang :alt 1] 100)
            (:lang gmap)]])
        gmap (assoc gmap :attr-val-global__lang gen-attr-val-global__lang)

        gen-attr-val-global__dropzone
        (igen/freq [
          [(get weights [:attr-val-global__dropzone :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-global__dropzone :alt 1] 100)
            (gen/return "STUB ASCII case-insensitive")]
          [(get weights [:attr-val-global__dropzone :alt 2] 100)
            (gen/tuple
              (:name gmap)
              (gen/vector
                (gen/tuple
                  (:rS gmap)
                  (:name gmap))))]])
        gmap (assoc gmap :attr-val-global__dropzone gen-attr-val-global__dropzone)

        gen-event-attribute
        (gen/tuple
          (chuck/string-from-regex #"on[a-z]+=\"")
          (:attribute-data gmap)
          (gen/return "\""))
        gmap (assoc gmap :event-attribute gen-event-attribute)

        gen-attr-val-global__class
        (igen/freq [
          [(get weights [:attr-val-global__class :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-global__class :alt 1] 100)
            (gen/tuple
              (:name gmap)
              (gen/vector
                (gen/tuple
                  (:rS gmap)
                  (:name gmap))))]])
        gmap (assoc gmap :attr-val-global__class gen-attr-val-global__class)

        gen-aria-attribute
        (gen/tuple
          (gen/return "aria-")
          (:name gmap)
          (gen/return "=\"")
          (:attribute-data gmap)
          (gen/return "\""))
        gmap (assoc gmap :aria-attribute gen-aria-attribute)

        gen-attr-val-global__tabindex
        (igen/freq [
          [(get weights [:attr-val-global__tabindex :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-global__tabindex :alt 1] 100)
            (:integer gmap)]])
        gmap (assoc gmap :attr-val-global__tabindex gen-attr-val-global__tabindex)

        gen-custom-data-attribute
        (gen/tuple
          (gen/return "data-")
          (:name gmap)
          (gen/return "=\"")
          (:attribute-data gmap)
          (gen/return "\""))
        gmap (assoc gmap :custom-data-attribute gen-custom-data-attribute)

        gen-attr-val-global__contextmenu
        (igen/freq [
          [(get weights [:attr-val-global__contextmenu :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-global__contextmenu :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-global__contextmenu gen-attr-val-global__contextmenu)

        gen-global-attribute
        (igen/freq [
          [(get weights [:global-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "hidden")
              (:opt-boolean gmap))]
          [(get weights [:global-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "accesskey=\"")
              (:attr-val-global__accesskey gmap)
              (gen/return "\""))]
          [(get weights [:global-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "class=\"")
              (:attr-val-global__class gmap)
              (gen/return "\""))]
          [(get weights [:global-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "contenteditable=\"")
              (:attr-val-global__contenteditable gmap)
              (gen/return "\""))]
          [(get weights [:global-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "contextmenu=\"")
              (:attr-val-global__contextmenu gmap)
              (gen/return "\""))]
          [(get weights [:global-attribute :alt 5] 100)
            (gen/tuple
              (gen/return "dir=\"")
              (:attr-val-global__dir gmap)
              (gen/return "\""))]
          [(get weights [:global-attribute :alt 6] 100)
            (gen/tuple
              (gen/return "draggable=\"")
              (:attr-val-global__draggable gmap)
              (gen/return "\""))]
          [(get weights [:global-attribute :alt 7] 100)
            (gen/tuple
              (gen/return "dropzone=\"")
              (:attr-val-global__dropzone gmap)
              (gen/return "\""))]
          [(get weights [:global-attribute :alt 8] 100)
            (gen/tuple
              (gen/return "id=\"")
              (:attr-val-global__id gmap)
              (gen/return "\""))]
          [(get weights [:global-attribute :alt 9] 100)
            (gen/tuple
              (gen/return "lang=\"")
              (:attr-val-global__lang gmap)
              (gen/return "\""))]
          [(get weights [:global-attribute :alt 10] 100)
            (gen/tuple
              (gen/return "spellcheck=\"")
              (:attr-val-global__spellcheck gmap)
              (gen/return "\""))]
          [(get weights [:global-attribute :alt 11] 100)
            (gen/tuple
              (gen/return "style=\"")
              (:attr-val-global__style gmap)
              (gen/return "\""))]
          [(get weights [:global-attribute :alt 12] 100)
            (gen/tuple
              (gen/return "tabindex=\"")
              (:attr-val-global__tabindex gmap)
              (gen/return "\""))]
          [(get weights [:global-attribute :alt 13] 100)
            (gen/tuple
              (gen/return "title=\"")
              (:attr-val-global__title gmap)
              (gen/return "\""))]
          [(get weights [:global-attribute :alt 14] 100)
            (gen/tuple
              (gen/return "translate=\"")
              (:attr-val-global__translate gmap)
              (gen/return "\""))]
          [(get weights [:global-attribute :alt 15] 100)
            (:custom-data-attribute gmap)]
          [(get weights [:global-attribute :alt 16] 100)
            (:aria-attribute gmap)]
          [(get weights [:global-attribute :alt 17] 100)
            (:role-attribute gmap)]
          [(get weights [:global-attribute :alt 18] 100)
            (:event-attribute gmap)]])
        gmap (assoc gmap :global-attribute gen-global-attribute)

        gen-var-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :var-attribute gen-var-attribute)

        gen-mime-type
        (chuck/string-from-regex #"[a-z]+/[a-z0-9+-]+")
        gmap (assoc gmap :mime-type gen-mime-type)

        gen-url
        (igen/freq [
          [(get weights [:url :alt 0] 100)
            (chuck/string-from-regex #"(?:https:|http:)?//[A-Za-z0-9._\-/&#=,?]+")]
          [(get weights [:url :alt 1] 100)
            (chuck/string-from-regex #"[A-Za-z0-9._\-/#=]+")]
          [(get weights [:url :alt 2] 100)
            (gen/tuple
              (gen/return "data:")
              (:mime-type gmap)
              (gen/return ";base64,")
              (chuck/string-from-regex #"[A-Za-z0-9+=/]*"))]])
        gmap (assoc gmap :url gen-url)

        gen-attr-val-track__src
        (igen/freq [
          [(get weights [:attr-val-track__src :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-track__src :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-track__src gen-attr-val-track__src)

        gen-attr-val-img__height
        (igen/freq [
          [(get weights [:attr-val-img__height :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-img__height :alt 1] 100)
            (:non-negative-integer gmap)]
          [(get weights [:attr-val-img__height :alt 2] 100)
            (gen/tuple
              (:non-negative-integer gmap)
              (igen/freq [
                [(get weights [:attr-val-img__height :alt 2 :cat 1 :alt 0] 100)
                  (:length-unit gmap)]
                [(get weights [:attr-val-img__height :alt 2 :cat 1 :alt 1] 100)
                  (gen/return "%")]]))]])
        gmap (assoc gmap :attr-val-img__height gen-attr-val-img__height)

        gen-attr-val-input__placeholder
        (igen/freq [
          [(get weights [:attr-val-input__placeholder :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__placeholder :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-input__placeholder gen-attr-val-input__placeholder)

        gen-rp-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :rp-attribute gen-rp-attribute)

        gen-noscript-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :noscript-attribute gen-noscript-attribute)

        gen-attr-val-track__srclang
        (igen/freq [
          [(get weights [:attr-val-track__srclang :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-track__srclang :alt 1] 100)
            (:lang gmap)]])
        gmap (assoc gmap :attr-val-track__srclang gen-attr-val-track__srclang)

        gen-attr-val-track__kind
        (igen/freq [
          [(get weights [:attr-val-track__kind :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-track__kind :alt 1] 100)
            (gen/return "captions")]
          [(get weights [:attr-val-track__kind :alt 2] 100)
            (gen/return "chapters")]
          [(get weights [:attr-val-track__kind :alt 3] 100)
            (gen/return "descriptions")]
          [(get weights [:attr-val-track__kind :alt 4] 100)
            (gen/return "metadata")]
          [(get weights [:attr-val-track__kind :alt 5] 100)
            (gen/return "subtitles")]])
        gmap (assoc gmap :attr-val-track__kind gen-attr-val-track__kind)

        gen-attr-val-track__label
        (igen/freq [
          [(get weights [:attr-val-track__label :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-track__label :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-track__label gen-attr-val-track__label)

        gen-track-attribute
        (igen/freq [
          [(get weights [:track-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "default")
              (:opt-boolean gmap))]
          [(get weights [:track-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "kind=\"")
              (:attr-val-track__kind gmap)
              (gen/return "\""))]
          [(get weights [:track-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "label=\"")
              (:attr-val-track__label gmap)
              (gen/return "\""))]
          [(get weights [:track-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "src=\"")
              (:attr-val-track__src gmap)
              (gen/return "\""))]
          [(get weights [:track-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "srclang=\"")
              (:attr-val-track__srclang gmap)
              (gen/return "\""))]
          [(get weights [:track-attribute :alt 5] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :track-attribute gen-track-attribute)

        gen-section-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :section-attribute gen-section-attribute)

        gen-attr-val-base__target
        (igen/freq [
          [(get weights [:attr-val-base__target :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-base__target :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-base__target gen-attr-val-base__target)

        gen-pre-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :pre-attribute gen-pre-attribute)

        gen-attr-val-input__src
        (igen/freq [
          [(get weights [:attr-val-input__src :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__src :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-input__src gen-attr-val-input__src)

        gen-h3-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :h3-attribute gen-h3-attribute)]
    gmap))

(defn- html5-generators-part-1 [gmap weights]
  (let [
        gen-attr-val-object__name
        (igen/freq [
          [(get weights [:attr-val-object__name :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-object__name :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-object__name gen-attr-val-object__name)

        gen-thead-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :thead-attribute gen-thead-attribute)

        gen-attr-val-button__formmethod
        (igen/freq [
          [(get weights [:attr-val-button__formmethod :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-button__formmethod :alt 1] 100)
            (gen/return "GET")]
          [(get weights [:attr-val-button__formmethod :alt 2] 100)
            (gen/return "POST")]])
        gmap (assoc gmap :attr-val-button__formmethod gen-attr-val-button__formmethod)

        gen-h5-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :h5-attribute gen-h5-attribute)

        gen-attr-val-embed__src
        (igen/freq [
          [(get weights [:attr-val-embed__src :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-embed__src :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-embed__src gen-attr-val-embed__src)

        gen-attr-val-embed__height
        (igen/freq [
          [(get weights [:attr-val-embed__height :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-embed__height :alt 1] 100)
            (:non-negative-integer gmap)]
          [(get weights [:attr-val-embed__height :alt 2] 100)
            (gen/tuple
              (:non-negative-integer gmap)
              (igen/freq [
                [(get weights [:attr-val-embed__height :alt 2 :cat 1 :alt 0] 100)
                  (:length-unit gmap)]
                [(get weights [:attr-val-embed__height :alt 2 :cat 1 :alt 1] 100)
                  (gen/return "%")]]))]])
        gmap (assoc gmap :attr-val-embed__height gen-attr-val-embed__height)

        gen-attr-val-embed__width
        (igen/freq [
          [(get weights [:attr-val-embed__width :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-embed__width :alt 1] 100)
            (:non-negative-integer gmap)]
          [(get weights [:attr-val-embed__width :alt 2] 100)
            (gen/tuple
              (:non-negative-integer gmap)
              (igen/freq [
                [(get weights [:attr-val-embed__width :alt 2 :cat 1 :alt 0] 100)
                  (:length-unit gmap)]
                [(get weights [:attr-val-embed__width :alt 2 :cat 1 :alt 1] 100)
                  (gen/return "%")]]))]])
        gmap (assoc gmap :attr-val-embed__width gen-attr-val-embed__width)

        gen-attr-val-embed__type
        (igen/freq [
          [(get weights [:attr-val-embed__type :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-embed__type :alt 1] 100)
            (:mime-type gmap)]])
        gmap (assoc gmap :attr-val-embed__type gen-attr-val-embed__type)

        gen-embed-attribute
        (igen/freq [
          [(get weights [:embed-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "height=\"")
              (:attr-val-embed__height gmap)
              (gen/return "\""))]
          [(get weights [:embed-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "src=\"")
              (:attr-val-embed__src gmap)
              (gen/return "\""))]
          [(get weights [:embed-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "type=\"")
              (:attr-val-embed__type gmap)
              (gen/return "\""))]
          [(get weights [:embed-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "width=\"")
              (:attr-val-embed__width gmap)
              (gen/return "\""))]
          [(get weights [:embed-attribute :alt 4] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :embed-attribute gen-embed-attribute)

        gen-p-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :p-attribute gen-p-attribute)

        gen-attr-val-li__value
        (igen/freq [
          [(get weights [:attr-val-li__value :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-li__value :alt 1] 100)
            (:integer gmap)]])
        gmap (assoc gmap :attr-val-li__value gen-attr-val-li__value)

        gen-attr-val-map__name
        (igen/freq [
          [(get weights [:attr-val-map__name :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-map__name :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-map__name gen-attr-val-map__name)

        gen-map-attribute
        (igen/freq [
          [(get weights [:map-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "name=\"")
              (:attr-val-map__name gmap)
              (gen/return "\""))]
          [(get weights [:map-attribute :alt 1] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :map-attribute gen-map-attribute)

        gen-attr-val-label__form
        (igen/freq [
          [(get weights [:attr-val-label__form :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-label__form :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-label__form gen-attr-val-label__form)

        gen-attr-val-time__datetime
        (igen/freq [
          [(get weights [:attr-val-time__datetime :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-time__datetime :alt 1] 100)
            (gen/return "STUB Valid month string")]
          [(get weights [:attr-val-time__datetime :alt 2] 100)
            (gen/return "STUB valid date string")]
          [(get weights [:attr-val-time__datetime :alt 3] 100)
            (gen/return "STUB valid duration string")]
          [(get weights [:attr-val-time__datetime :alt 4] 100)
            (gen/return "STUB valid floating date and time string")]
          [(get weights [:attr-val-time__datetime :alt 5] 100)
            (gen/return "STUB valid global date and time string")]
          [(get weights [:attr-val-time__datetime :alt 6] 100)
            (gen/return "STUB valid non-negative integer")]
          [(get weights [:attr-val-time__datetime :alt 7] 100)
            (gen/return "STUB valid time string")]
          [(get weights [:attr-val-time__datetime :alt 8] 100)
            (gen/return "STUB valid time-zone offset string")]
          [(get weights [:attr-val-time__datetime :alt 9] 100)
            (gen/return "STUB valid week string")]
          [(get weights [:attr-val-time__datetime :alt 10] 100)
            (gen/return "STUB valid yearless date string")]])
        gmap (assoc gmap :attr-val-time__datetime gen-attr-val-time__datetime)

        gen-strong-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :strong-attribute gen-strong-attribute)

        gen-small-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :small-attribute gen-small-attribute)

        gen-attr-val-source__sizes
        (igen/freq [
          [(get weights [:attr-val-source__sizes :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-source__sizes :alt 1] 100)
            (gen/return "STUB Valid source size list")]])
        gmap (assoc gmap :attr-val-source__sizes gen-attr-val-source__sizes)

        gen-attr-val-input__form
        (igen/freq [
          [(get weights [:attr-val-input__form :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__form :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-input__form gen-attr-val-input__form)

        gen-wbr-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :wbr-attribute gen-wbr-attribute)

        gen-attr-val-ol__start
        (igen/freq [
          [(get weights [:attr-val-ol__start :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-ol__start :alt 1] 100)
            (:integer gmap)]])
        gmap (assoc gmap :attr-val-ol__start gen-attr-val-ol__start)

        gen-attr-val-output__for
        (igen/freq [
          [(get weights [:attr-val-output__for :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-output__for :alt 1] 100)
            (gen/tuple
              (:name gmap)
              (gen/vector
                (gen/tuple
                  (:rS gmap)
                  (:name gmap))))]
          [(get weights [:attr-val-output__for :alt 2] 100)
            (gen/return "STUB case-sensitive")]])
        gmap (assoc gmap :attr-val-output__for gen-attr-val-output__for)

        gen-attr-val-input__maxlength
        (igen/freq [
          [(get weights [:attr-val-input__maxlength :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__maxlength :alt 1] 100)
            (:non-negative-integer gmap)]])
        gmap (assoc gmap :attr-val-input__maxlength gen-attr-val-input__maxlength)

        gen-time-attribute
        (igen/freq [
          [(get weights [:time-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "datetime=\"")
              (:attr-val-time__datetime gmap)
              (gen/return "\""))]
          [(get weights [:time-attribute :alt 1] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :time-attribute gen-time-attribute)

        gen-h6-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :h6-attribute gen-h6-attribute)

        gen-attr-val-input__width
        (igen/freq [
          [(get weights [:attr-val-input__width :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__width :alt 1] 100)
            (:non-negative-integer gmap)]
          [(get weights [:attr-val-input__width :alt 2] 100)
            (gen/tuple
              (:non-negative-integer gmap)
              (igen/freq [
                [(get weights [:attr-val-input__width :alt 2 :cat 1 :alt 0] 100)
                  (:length-unit gmap)]
                [(get weights [:attr-val-input__width :alt 2 :cat 1 :alt 1] 100)
                  (gen/return "%")]]))]])
        gmap (assoc gmap :attr-val-input__width gen-attr-val-input__width)

        gen-attr-val-video__height
        (igen/freq [
          [(get weights [:attr-val-video__height :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-video__height :alt 1] 100)
            (:non-negative-integer gmap)]
          [(get weights [:attr-val-video__height :alt 2] 100)
            (gen/tuple
              (:non-negative-integer gmap)
              (igen/freq [
                [(get weights [:attr-val-video__height :alt 2 :cat 1 :alt 0] 100)
                  (:length-unit gmap)]
                [(get weights [:attr-val-video__height :alt 2 :cat 1 :alt 1] 100)
                  (gen/return "%")]]))]])
        gmap (assoc gmap :attr-val-video__height gen-attr-val-video__height)

        gen-attr-val-ins__datetime
        (igen/freq [
          [(get weights [:attr-val-ins__datetime :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-ins__datetime :alt 1] 100)
            (gen/return "STUB Valid date string with optional time")]])
        gmap (assoc gmap :attr-val-ins__datetime gen-attr-val-ins__datetime)

        gen-attr-val-button__formtarget
        (igen/freq [
          [(get weights [:attr-val-button__formtarget :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-button__formtarget :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-button__formtarget gen-attr-val-button__formtarget)

        gen-attr-val-button__form
        (igen/freq [
          [(get weights [:attr-val-button__form :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-button__form :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-button__form gen-attr-val-button__form)

        gen-attr-val-button__name
        (igen/freq [
          [(get weights [:attr-val-button__name :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-button__name :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-button__name gen-attr-val-button__name)

        gen-attr-val-button__formaction
        (igen/freq [
          [(get weights [:attr-val-button__formaction :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-button__formaction :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-button__formaction gen-attr-val-button__formaction)

        gen-attr-val-button__value
        (igen/freq [
          [(get weights [:attr-val-button__value :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-button__value :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-button__value gen-attr-val-button__value)

        gen-attr-val-button__type
        (igen/freq [
          [(get weights [:attr-val-button__type :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-button__type :alt 1] 100)
            (gen/return "button")]
          [(get weights [:attr-val-button__type :alt 2] 100)
            (gen/return "menu")]
          [(get weights [:attr-val-button__type :alt 3] 100)
            (gen/return "reset")]
          [(get weights [:attr-val-button__type :alt 4] 100)
            (gen/return "submit")]])
        gmap (assoc gmap :attr-val-button__type gen-attr-val-button__type)

        gen-attr-val-button__formenctype
        (igen/freq [
          [(get weights [:attr-val-button__formenctype :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-button__formenctype :alt 1] 100)
            (gen/return "application/x-www-form-urlencoded")]
          [(get weights [:attr-val-button__formenctype :alt 2] 100)
            (gen/return "multipart/form-data")]
          [(get weights [:attr-val-button__formenctype :alt 3] 100)
            (gen/return "text/plain")]])
        gmap (assoc gmap :attr-val-button__formenctype gen-attr-val-button__formenctype)

        gen-attr-val-button__menu
        (igen/freq [
          [(get weights [:attr-val-button__menu :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-button__menu :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-button__menu gen-attr-val-button__menu)

        gen-button-attribute
        (igen/freq [
          [(get weights [:button-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "autofocus")
              (:opt-boolean gmap))]
          [(get weights [:button-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "disabled")
              (:opt-boolean gmap))]
          [(get weights [:button-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "formnovalidate")
              (:opt-boolean gmap))]
          [(get weights [:button-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "form=\"")
              (:attr-val-button__form gmap)
              (gen/return "\""))]
          [(get weights [:button-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "formaction=\"")
              (:attr-val-button__formaction gmap)
              (gen/return "\""))]
          [(get weights [:button-attribute :alt 5] 100)
            (gen/tuple
              (gen/return "formenctype=\"")
              (:attr-val-button__formenctype gmap)
              (gen/return "\""))]
          [(get weights [:button-attribute :alt 6] 100)
            (gen/tuple
              (gen/return "formmethod=\"")
              (:attr-val-button__formmethod gmap)
              (gen/return "\""))]
          [(get weights [:button-attribute :alt 7] 100)
            (gen/tuple
              (gen/return "formtarget=\"")
              (:attr-val-button__formtarget gmap)
              (gen/return "\""))]
          [(get weights [:button-attribute :alt 8] 100)
            (gen/tuple
              (gen/return "menu=\"")
              (:attr-val-button__menu gmap)
              (gen/return "\""))]
          [(get weights [:button-attribute :alt 9] 100)
            (gen/tuple
              (gen/return "name=\"")
              (:attr-val-button__name gmap)
              (gen/return "\""))]
          [(get weights [:button-attribute :alt 10] 100)
            (gen/tuple
              (gen/return "type=\"")
              (:attr-val-button__type gmap)
              (gen/return "\""))]
          [(get weights [:button-attribute :alt 11] 100)
            (gen/tuple
              (gen/return "value=\"")
              (:attr-val-button__value gmap)
              (gen/return "\""))]
          [(get weights [:button-attribute :alt 12] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :button-attribute gen-button-attribute)

        gen-attr-val-meta__name
        (igen/freq [
          [(get weights [:attr-val-meta__name :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-meta__name :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-meta__name gen-attr-val-meta__name)

        gen-attr-val-object__data
        (igen/freq [
          [(get weights [:attr-val-object__data :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-object__data :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-object__data gen-attr-val-object__data)

        gen-samp-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :samp-attribute gen-samp-attribute)

        gen-attr-val-video__width
        (igen/freq [
          [(get weights [:attr-val-video__width :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-video__width :alt 1] 100)
            (:non-negative-integer gmap)]
          [(get weights [:attr-val-video__width :alt 2] 100)
            (gen/tuple
              (:non-negative-integer gmap)
              (igen/freq [
                [(get weights [:attr-val-video__width :alt 2 :cat 1 :alt 0] 100)
                  (:length-unit gmap)]
                [(get weights [:attr-val-video__width :alt 2 :cat 1 :alt 1] 100)
                  (gen/return "%")]]))]])
        gmap (assoc gmap :attr-val-video__width gen-attr-val-video__width)

        gen-attr-val-img__src
        (igen/freq [
          [(get weights [:attr-val-img__src :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-img__src :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-img__src gen-attr-val-img__src)

        gen-attr-val-textarea__form
        (igen/freq [
          [(get weights [:attr-val-textarea__form :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-textarea__form :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-textarea__form gen-attr-val-textarea__form)

        gen-attr-val-textarea__name
        (igen/freq [
          [(get weights [:attr-val-textarea__name :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-textarea__name :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-textarea__name gen-attr-val-textarea__name)

        gen-h1-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :h1-attribute gen-h1-attribute)

        gen-attr-val-textarea__dirname
        (igen/freq [
          [(get weights [:attr-val-textarea__dirname :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-textarea__dirname :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-textarea__dirname gen-attr-val-textarea__dirname)

        gen-h4-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :h4-attribute gen-h4-attribute)

        gen-attr-val-dfn__title
        (igen/freq [
          [(get weights [:attr-val-dfn__title :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-dfn__title :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-dfn__title gen-attr-val-dfn__title)

        gen-dfn-attribute
        (igen/freq [
          [(get weights [:dfn-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "title=\"")
              (:attr-val-dfn__title gmap)
              (gen/return "\""))]
          [(get weights [:dfn-attribute :alt 1] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :dfn-attribute gen-dfn-attribute)

        gen-attr-val-table__border
        (igen/freq [
          [(get weights [:attr-val-table__border :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-table__border :alt 1] 100)
            (gen/return "1")]])
        gmap (assoc gmap :attr-val-table__border gen-attr-val-table__border)]
    gmap))

(defn- html5-generators-part-2 [gmap weights]
  (let [
        gen-floating-point-number
        (chuck/string-from-regex #"-?[0-9]*.[0-9]+")
        gmap (assoc gmap :floating-point-number gen-floating-point-number)

        gen-attr-val-meter__value
        (igen/freq [
          [(get weights [:attr-val-meter__value :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-meter__value :alt 1] 100)
            (:floating-point-number gmap)]])
        gmap (assoc gmap :attr-val-meter__value gen-attr-val-meter__value)

        gen-attr-val-colgroup__span
        (igen/freq [
          [(get weights [:attr-val-colgroup__span :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-colgroup__span :alt 1] 100)
            (:non-negative-integer gmap)]])
        gmap (assoc gmap :attr-val-colgroup__span gen-attr-val-colgroup__span)

        gen-attr-val-form__target
        (igen/freq [
          [(get weights [:attr-val-form__target :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-form__target :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-form__target gen-attr-val-form__target)

        gen-attr-val-fieldset__name
        (igen/freq [
          [(get weights [:attr-val-fieldset__name :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-fieldset__name :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-fieldset__name gen-attr-val-fieldset__name)

        gen-attr-val-iframe__src
        (igen/freq [
          [(get weights [:attr-val-iframe__src :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-iframe__src :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-iframe__src gen-attr-val-iframe__src)

        gen-attr-val-iframe__name
        (igen/freq [
          [(get weights [:attr-val-iframe__name :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-iframe__name :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-iframe__name gen-attr-val-iframe__name)

        gen-attr-val-iframe__width
        (igen/freq [
          [(get weights [:attr-val-iframe__width :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-iframe__width :alt 1] 100)
            (:non-negative-integer gmap)]
          [(get weights [:attr-val-iframe__width :alt 2] 100)
            (gen/tuple
              (:non-negative-integer gmap)
              (igen/freq [
                [(get weights [:attr-val-iframe__width :alt 2 :cat 1 :alt 0] 100)
                  (:length-unit gmap)]
                [(get weights [:attr-val-iframe__width :alt 2 :cat 1 :alt 1] 100)
                  (gen/return "%")]]))]])
        gmap (assoc gmap :attr-val-iframe__width gen-attr-val-iframe__width)

        gen-attr-val-iframe__sandbox
        (igen/freq [
          [(get weights [:attr-val-iframe__sandbox :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-iframe__sandbox :alt 1] 100)
            (gen/return "allow-forms")]
          [(get weights [:attr-val-iframe__sandbox :alt 2] 100)
            (gen/return "allow-pointer-lock")]
          [(get weights [:attr-val-iframe__sandbox :alt 3] 100)
            (gen/return "allow-popups")]
          [(get weights [:attr-val-iframe__sandbox :alt 4] 100)
            (gen/return "allow-same-origin")]
          [(get weights [:attr-val-iframe__sandbox :alt 5] 100)
            (gen/return "allow-scripts")]
          [(get weights [:attr-val-iframe__sandbox :alt 6] 100)
            (gen/return "allow-top-navigation")]
          [(get weights [:attr-val-iframe__sandbox :alt 7] 100)
            (gen/return "STUB ASCII case-insensitive")]
          [(get weights [:attr-val-iframe__sandbox :alt 8] 100)
            (gen/tuple
              (:name gmap)
              (gen/vector
                (gen/tuple
                  (:rS gmap)
                  (:name gmap))))]])
        gmap (assoc gmap :attr-val-iframe__sandbox gen-attr-val-iframe__sandbox)

        gen-attr-val-iframe__srcdoc
        (igen/freq [
          [(get weights [:attr-val-iframe__srcdoc :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-iframe__srcdoc :alt 1] 100)
            (gen/return "iframe")]
          [(get weights [:attr-val-iframe__srcdoc :alt 2] 100)
            (gen/return "srcdoc")]])
        gmap (assoc gmap :attr-val-iframe__srcdoc gen-attr-val-iframe__srcdoc)

        gen-attr-val-iframe__height
        (igen/freq [
          [(get weights [:attr-val-iframe__height :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-iframe__height :alt 1] 100)
            (:non-negative-integer gmap)]
          [(get weights [:attr-val-iframe__height :alt 2] 100)
            (gen/tuple
              (:non-negative-integer gmap)
              (igen/freq [
                [(get weights [:attr-val-iframe__height :alt 2 :cat 1 :alt 0] 100)
                  (:length-unit gmap)]
                [(get weights [:attr-val-iframe__height :alt 2 :cat 1 :alt 1] 100)
                  (gen/return "%")]]))]])
        gmap (assoc gmap :attr-val-iframe__height gen-attr-val-iframe__height)

        gen-iframe-attribute
        (igen/freq [
          [(get weights [:iframe-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "allowfullscreen")
              (:opt-boolean gmap))]
          [(get weights [:iframe-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "height=\"")
              (:attr-val-iframe__height gmap)
              (gen/return "\""))]
          [(get weights [:iframe-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "name=\"")
              (:attr-val-iframe__name gmap)
              (gen/return "\""))]
          [(get weights [:iframe-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "sandbox=\"")
              (:attr-val-iframe__sandbox gmap)
              (gen/return "\""))]
          [(get weights [:iframe-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "src=\"")
              (:attr-val-iframe__src gmap)
              (gen/return "\""))]
          [(get weights [:iframe-attribute :alt 5] 100)
            (gen/tuple
              (gen/return "srcdoc=\"")
              (:attr-val-iframe__srcdoc gmap)
              (gen/return "\""))]
          [(get weights [:iframe-attribute :alt 6] 100)
            (gen/tuple
              (gen/return "width=\"")
              (:attr-val-iframe__width gmap)
              (gen/return "\""))]
          [(get weights [:iframe-attribute :alt 7] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :iframe-attribute gen-iframe-attribute)

        gen-attr-val-meter__min
        (igen/freq [
          [(get weights [:attr-val-meter__min :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-meter__min :alt 1] 100)
            (:floating-point-number gmap)]])
        gmap (assoc gmap :attr-val-meter__min gen-attr-val-meter__min)

        gen-attr-val-area__rel
        (igen/freq [
          [(get weights [:attr-val-area__rel :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-area__rel :alt 1] 100)
            (gen/tuple
              (:name gmap)
              (gen/vector
                (gen/tuple
                  (:rS gmap)
                  (:name gmap))))]])
        gmap (assoc gmap :attr-val-area__rel gen-attr-val-area__rel)

        gen-attr-val-area__href
        (igen/freq [
          [(get weights [:attr-val-area__href :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-area__href :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-area__href gen-attr-val-area__href)

        gen-attr-val-area__alt
        (igen/freq [
          [(get weights [:attr-val-area__alt :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-area__alt :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-area__alt gen-attr-val-area__alt)

        gen-attr-val-area__target
        (igen/freq [
          [(get weights [:attr-val-area__target :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-area__target :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-area__target gen-attr-val-area__target)

        gen-attr-val-area__coords
        (igen/freq [
          [(get weights [:attr-val-area__coords :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-area__coords :alt 1] 100)
            (gen/return "STUB Valid list of floating-point numbers")]])
        gmap (assoc gmap :attr-val-area__coords gen-attr-val-area__coords)

        gen-attr-val-area__type
        (igen/freq [
          [(get weights [:attr-val-area__type :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-area__type :alt 1] 100)
            (:mime-type gmap)]])
        gmap (assoc gmap :attr-val-area__type gen-attr-val-area__type)

        gen-attr-val-area__shape
        (igen/freq [
          [(get weights [:attr-val-area__shape :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-area__shape :alt 1] 100)
            (gen/return "circle")]
          [(get weights [:attr-val-area__shape :alt 2] 100)
            (gen/return "default")]
          [(get weights [:attr-val-area__shape :alt 3] 100)
            (gen/return "poly")]
          [(get weights [:attr-val-area__shape :alt 4] 100)
            (gen/return "rect")]])
        gmap (assoc gmap :attr-val-area__shape gen-attr-val-area__shape)

        gen-attr-val-area__download
        (gen/return "")
        gmap (assoc gmap :attr-val-area__download gen-attr-val-area__download)

        gen-attr-val-area__hreflang
        (igen/freq [
          [(get weights [:attr-val-area__hreflang :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-area__hreflang :alt 1] 100)
            (:lang gmap)]])
        gmap (assoc gmap :attr-val-area__hreflang gen-attr-val-area__hreflang)

        gen-area-attribute
        (igen/freq [
          [(get weights [:area-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "alt=\"")
              (:attr-val-area__alt gmap)
              (gen/return "\""))]
          [(get weights [:area-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "coords=\"")
              (:attr-val-area__coords gmap)
              (gen/return "\""))]
          [(get weights [:area-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "download=\"")
              (:attr-val-area__download gmap)
              (gen/return "\""))]
          [(get weights [:area-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "href=\"")
              (:attr-val-area__href gmap)
              (gen/return "\""))]
          [(get weights [:area-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "hreflang=\"")
              (:attr-val-area__hreflang gmap)
              (gen/return "\""))]
          [(get weights [:area-attribute :alt 5] 100)
            (gen/tuple
              (gen/return "rel=\"")
              (:attr-val-area__rel gmap)
              (gen/return "\""))]
          [(get weights [:area-attribute :alt 6] 100)
            (gen/tuple
              (gen/return "shape=\"")
              (:attr-val-area__shape gmap)
              (gen/return "\""))]
          [(get weights [:area-attribute :alt 7] 100)
            (gen/tuple
              (gen/return "target=\"")
              (:attr-val-area__target gmap)
              (gen/return "\""))]
          [(get weights [:area-attribute :alt 8] 100)
            (gen/tuple
              (gen/return "type=\"")
              (:attr-val-area__type gmap)
              (gen/return "\""))]
          [(get weights [:area-attribute :alt 9] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :area-attribute gen-area-attribute)

        gen-tbody-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :tbody-attribute gen-tbody-attribute)

        gen-dt-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :dt-attribute gen-dt-attribute)

        gen-attr-val-select__size
        (igen/freq [
          [(get weights [:attr-val-select__size :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-select__size :alt 1] 100)
            (:non-negative-integer gmap)]])
        gmap (assoc gmap :attr-val-select__size gen-attr-val-select__size)

        gen-summary-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :summary-attribute gen-summary-attribute)

        gen-attr-val-video__preload
        (igen/freq [
          [(get weights [:attr-val-video__preload :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-video__preload :alt 1] 100)
            (gen/return "auto")]
          [(get weights [:attr-val-video__preload :alt 2] 100)
            (gen/return "metadata")]
          [(get weights [:attr-val-video__preload :alt 3] 100)
            (gen/return "none")]])
        gmap (assoc gmap :attr-val-video__preload gen-attr-val-video__preload)

        gen-attr-val-output__name
        (igen/freq [
          [(get weights [:attr-val-output__name :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-output__name :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-output__name gen-attr-val-output__name)

        gen-attr-val-output__form
        (igen/freq [
          [(get weights [:attr-val-output__form :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-output__form :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-output__form gen-attr-val-output__form)

        gen-output-attribute
        (igen/freq [
          [(get weights [:output-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "for=\"")
              (:attr-val-output__for gmap)
              (gen/return "\""))]
          [(get weights [:output-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "form=\"")
              (:attr-val-output__form gmap)
              (gen/return "\""))]
          [(get weights [:output-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "name=\"")
              (:attr-val-output__name gmap)
              (gen/return "\""))]
          [(get weights [:output-attribute :alt 3] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :output-attribute gen-output-attribute)

        gen-attr-val-ol__type
        (igen/freq [
          [(get weights [:attr-val-ol__type :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-ol__type :alt 1] 100)
            (gen/return "1")]
          [(get weights [:attr-val-ol__type :alt 2] 100)
            (gen/return "A")]
          [(get weights [:attr-val-ol__type :alt 3] 100)
            (gen/return "I")]
          [(get weights [:attr-val-ol__type :alt 4] 100)
            (gen/return "a")]
          [(get weights [:attr-val-ol__type :alt 5] 100)
            (gen/return "i")]])
        gmap (assoc gmap :attr-val-ol__type gen-attr-val-ol__type)

        gen-attr-val-a__type
        (igen/freq [
          [(get weights [:attr-val-a__type :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-a__type :alt 1] 100)
            (:mime-type gmap)]])
        gmap (assoc gmap :attr-val-a__type gen-attr-val-a__type)

        gen-attr-val-a__target
        (igen/freq [
          [(get weights [:attr-val-a__target :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-a__target :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-a__target gen-attr-val-a__target)

        gen-attr-val-meter__max
        (igen/freq [
          [(get weights [:attr-val-meter__max :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-meter__max :alt 1] 100)
            (:floating-point-number gmap)]])
        gmap (assoc gmap :attr-val-meter__max gen-attr-val-meter__max)

        gen-attr-val-option__value
        (igen/freq [
          [(get weights [:attr-val-option__value :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-option__value :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-option__value gen-attr-val-option__value)

        gen-attr-val-blockquote__cite
        (igen/freq [
          [(get weights [:attr-val-blockquote__cite :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-blockquote__cite :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-blockquote__cite gen-attr-val-blockquote__cite)

        gen-colgroup-attribute
        (igen/freq [
          [(get weights [:colgroup-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "span=\"")
              (:attr-val-colgroup__span gmap)
              (gen/return "\""))]
          [(get weights [:colgroup-attribute :alt 1] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :colgroup-attribute gen-colgroup-attribute)

        gen-figure-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :figure-attribute gen-figure-attribute)

        gen-attr-val-td__rowspan
        (igen/freq [
          [(get weights [:attr-val-td__rowspan :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-td__rowspan :alt 1] 100)
            (:non-negative-integer gmap)]])
        gmap (assoc gmap :attr-val-td__rowspan gen-attr-val-td__rowspan)

        gen-attr-val-textarea__wrap
        (igen/freq [
          [(get weights [:attr-val-textarea__wrap :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-textarea__wrap :alt 1] 100)
            (gen/return "hard")]
          [(get weights [:attr-val-textarea__wrap :alt 2] 100)
            (gen/return "soft")]])
        gmap (assoc gmap :attr-val-textarea__wrap gen-attr-val-textarea__wrap)

        gen-i-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :i-attribute gen-i-attribute)

        gen-attr-val-keygen__form
        (igen/freq [
          [(get weights [:attr-val-keygen__form :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-keygen__form :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-keygen__form gen-attr-val-keygen__form)

        gen-attr-val-input__title
        (igen/freq [
          [(get weights [:attr-val-input__title :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__title :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-input__title gen-attr-val-input__title)

        gen-attr-val-th__colspan
        (igen/freq [
          [(get weights [:attr-val-th__colspan :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-th__colspan :alt 1] 100)
            (:non-negative-integer gmap)]])
        gmap (assoc gmap :attr-val-th__colspan gen-attr-val-th__colspan)

        gen-ul-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :ul-attribute gen-ul-attribute)

        gen-body-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :body-attribute gen-body-attribute)

        gen-attr-val-input__list
        (igen/freq [
          [(get weights [:attr-val-input__list :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__list :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-input__list gen-attr-val-input__list)

        gen-kbd-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :kbd-attribute gen-kbd-attribute)

        gen-attr-val-link__media
        (igen/freq [
          [(get weights [:attr-val-link__media :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-link__media :alt 1] 100)
            (gen/return "STUB Valid media query list")]])
        gmap (assoc gmap :attr-val-link__media gen-attr-val-link__media)]
    gmap))

(defn- html5-generators-part-3 [gmap weights]
  (let [
        gen-attr-val-keygen__keytype
        (igen/freq [
          [(get weights [:attr-val-keygen__keytype :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-keygen__keytype :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-keygen__keytype gen-attr-val-keygen__keytype)

        gen-em-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :em-attribute gen-em-attribute)

        gen-ol-attribute
        (igen/freq [
          [(get weights [:ol-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "reversed")
              (:opt-boolean gmap))]
          [(get weights [:ol-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "start=\"")
              (:attr-val-ol__start gmap)
              (gen/return "\""))]
          [(get weights [:ol-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "type=\"")
              (:attr-val-ol__type gmap)
              (gen/return "\""))]
          [(get weights [:ol-attribute :alt 3] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :ol-attribute gen-ol-attribute)

        gen-attr-val-meta__http-equiv
        (igen/freq [
          [(get weights [:attr-val-meta__http-equiv :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-meta__http-equiv :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-meta__http-equiv gen-attr-val-meta__http-equiv)

        gen-attr-val-label__for
        (igen/freq [
          [(get weights [:attr-val-label__for :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-label__for :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-label__for gen-attr-val-label__for)

        gen-label-attribute
        (igen/freq [
          [(get weights [:label-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "for=\"")
              (:attr-val-label__for gmap)
              (gen/return "\""))]
          [(get weights [:label-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "form=\"")
              (:attr-val-label__form gmap)
              (gen/return "\""))]
          [(get weights [:label-attribute :alt 2] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :label-attribute gen-label-attribute)

        gen-attr-val-input__minlength
        (igen/freq [
          [(get weights [:attr-val-input__minlength :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__minlength :alt 1] 100)
            (:non-negative-integer gmap)]])
        gmap (assoc gmap :attr-val-input__minlength gen-attr-val-input__minlength)

        gen-attr-val-input__inputmode
        (igen/freq [
          [(get weights [:attr-val-input__inputmode :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__inputmode :alt 1] 100)
            (gen/return "email")]
          [(get weights [:attr-val-input__inputmode :alt 2] 100)
            (gen/return "full-width-latin")]
          [(get weights [:attr-val-input__inputmode :alt 3] 100)
            (gen/return "kana")]
          [(get weights [:attr-val-input__inputmode :alt 4] 100)
            (gen/return "kana-name")]
          [(get weights [:attr-val-input__inputmode :alt 5] 100)
            (gen/return "katakana")]
          [(get weights [:attr-val-input__inputmode :alt 6] 100)
            (gen/return "latin")]
          [(get weights [:attr-val-input__inputmode :alt 7] 100)
            (gen/return "latin-name")]
          [(get weights [:attr-val-input__inputmode :alt 8] 100)
            (gen/return "latin-prose")]
          [(get weights [:attr-val-input__inputmode :alt 9] 100)
            (gen/return "numeric")]
          [(get weights [:attr-val-input__inputmode :alt 10] 100)
            (gen/return "tel")]
          [(get weights [:attr-val-input__inputmode :alt 11] 100)
            (gen/return "url")]
          [(get weights [:attr-val-input__inputmode :alt 12] 100)
            (gen/return "verbatim")]])
        gmap (assoc gmap :attr-val-input__inputmode gen-attr-val-input__inputmode)

        gen-attr-val-input__max
        (igen/freq [
          [(get weights [:attr-val-input__max :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__max :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-input__max gen-attr-val-input__max)

        gen-attr-val-input__step
        (igen/freq [
          [(get weights [:attr-val-input__step :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__step :alt 1] 100)
            (gen/return "any")]
          [(get weights [:attr-val-input__step :alt 2] 100)
            (:floating-point-number gmap)]])
        gmap (assoc gmap :attr-val-input__step gen-attr-val-input__step)

        gen-attr-val-input__pattern
        (gen/return "")
        gmap (assoc gmap :attr-val-input__pattern gen-attr-val-input__pattern)

        gen-attr-val-input__autocomplete
        (igen/freq [
          [(get weights [:attr-val-input__autocomplete :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__autocomplete :alt 1] 100)
            (gen/return "additional-name")]
          [(get weights [:attr-val-input__autocomplete :alt 2] 100)
            (gen/return "address-level1")]
          [(get weights [:attr-val-input__autocomplete :alt 3] 100)
            (gen/return "address-level2")]
          [(get weights [:attr-val-input__autocomplete :alt 4] 100)
            (gen/return "address-level3")]
          [(get weights [:attr-val-input__autocomplete :alt 5] 100)
            (gen/return "address-level4")]
          [(get weights [:attr-val-input__autocomplete :alt 6] 100)
            (gen/return "address-line1")]
          [(get weights [:attr-val-input__autocomplete :alt 7] 100)
            (gen/return "address-line2")]
          [(get weights [:attr-val-input__autocomplete :alt 8] 100)
            (gen/return "address-line3")]
          [(get weights [:attr-val-input__autocomplete :alt 9] 100)
            (gen/return "bday")]
          [(get weights [:attr-val-input__autocomplete :alt 10] 100)
            (gen/return "bday-day")]
          [(get weights [:attr-val-input__autocomplete :alt 11] 100)
            (gen/return "bday-month")]
          [(get weights [:attr-val-input__autocomplete :alt 12] 100)
            (gen/return "bday-year")]
          [(get weights [:attr-val-input__autocomplete :alt 13] 100)
            (gen/return "cc-additional-name")]
          [(get weights [:attr-val-input__autocomplete :alt 14] 100)
            (gen/return "cc-csc")]
          [(get weights [:attr-val-input__autocomplete :alt 15] 100)
            (gen/return "cc-exp")]
          [(get weights [:attr-val-input__autocomplete :alt 16] 100)
            (gen/return "cc-exp-month")]
          [(get weights [:attr-val-input__autocomplete :alt 17] 100)
            (gen/return "cc-exp-year")]
          [(get weights [:attr-val-input__autocomplete :alt 18] 100)
            (gen/return "cc-family-name")]
          [(get weights [:attr-val-input__autocomplete :alt 19] 100)
            (gen/return "cc-given-name")]
          [(get weights [:attr-val-input__autocomplete :alt 20] 100)
            (gen/return "cc-name")]
          [(get weights [:attr-val-input__autocomplete :alt 21] 100)
            (gen/return "cc-number")]
          [(get weights [:attr-val-input__autocomplete :alt 22] 100)
            (gen/return "cc-type")]
          [(get weights [:attr-val-input__autocomplete :alt 23] 100)
            (gen/return "country")]
          [(get weights [:attr-val-input__autocomplete :alt 24] 100)
            (gen/return "country-name")]
          [(get weights [:attr-val-input__autocomplete :alt 25] 100)
            (gen/return "current-password")]
          [(get weights [:attr-val-input__autocomplete :alt 26] 100)
            (gen/return "email")]
          [(get weights [:attr-val-input__autocomplete :alt 27] 100)
            (gen/return "family-name")]
          [(get weights [:attr-val-input__autocomplete :alt 28] 100)
            (gen/return "given-name")]
          [(get weights [:attr-val-input__autocomplete :alt 29] 100)
            (gen/return "honorific-prefix")]
          [(get weights [:attr-val-input__autocomplete :alt 30] 100)
            (gen/return "honorific-suffix")]
          [(get weights [:attr-val-input__autocomplete :alt 31] 100)
            (gen/return "impp")]
          [(get weights [:attr-val-input__autocomplete :alt 32] 100)
            (gen/return "language")]
          [(get weights [:attr-val-input__autocomplete :alt 33] 100)
            (gen/return "name")]
          [(get weights [:attr-val-input__autocomplete :alt 34] 100)
            (gen/return "new-password")]
          [(get weights [:attr-val-input__autocomplete :alt 35] 100)
            (gen/return "nickname")]
          [(get weights [:attr-val-input__autocomplete :alt 36] 100)
            (gen/return "off")]
          [(get weights [:attr-val-input__autocomplete :alt 37] 100)
            (gen/return "on")]
          [(get weights [:attr-val-input__autocomplete :alt 38] 100)
            (gen/return "organization")]
          [(get weights [:attr-val-input__autocomplete :alt 39] 100)
            (gen/return "organization-title")]
          [(get weights [:attr-val-input__autocomplete :alt 40] 100)
            (gen/return "photo")]
          [(get weights [:attr-val-input__autocomplete :alt 41] 100)
            (gen/return "postal-code")]
          [(get weights [:attr-val-input__autocomplete :alt 42] 100)
            (gen/return "sex")]
          [(get weights [:attr-val-input__autocomplete :alt 43] 100)
            (gen/return "street-address")]
          [(get weights [:attr-val-input__autocomplete :alt 44] 100)
            (gen/return "tel")]
          [(get weights [:attr-val-input__autocomplete :alt 45] 100)
            (gen/return "tel-area-code")]
          [(get weights [:attr-val-input__autocomplete :alt 46] 100)
            (gen/return "tel-country-code")]
          [(get weights [:attr-val-input__autocomplete :alt 47] 100)
            (gen/return "tel-extension")]
          [(get weights [:attr-val-input__autocomplete :alt 48] 100)
            (gen/return "tel-local")]
          [(get weights [:attr-val-input__autocomplete :alt 49] 100)
            (gen/return "tel-local-prefix")]
          [(get weights [:attr-val-input__autocomplete :alt 50] 100)
            (gen/return "tel-local-suffix")]
          [(get weights [:attr-val-input__autocomplete :alt 51] 100)
            (gen/return "tel-national")]
          [(get weights [:attr-val-input__autocomplete :alt 52] 100)
            (gen/return "transaction-amount")]
          [(get weights [:attr-val-input__autocomplete :alt 53] 100)
            (gen/return "transaction-currency")]
          [(get weights [:attr-val-input__autocomplete :alt 54] 100)
            (gen/return "url")]
          [(get weights [:attr-val-input__autocomplete :alt 55] 100)
            (gen/return "username")]])
        gmap (assoc gmap :attr-val-input__autocomplete gen-attr-val-input__autocomplete)

        gen-attr-val-input__formenctype
        (igen/freq [
          [(get weights [:attr-val-input__formenctype :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__formenctype :alt 1] 100)
            (gen/return "application/x-www-form-urlencoded")]
          [(get weights [:attr-val-input__formenctype :alt 2] 100)
            (gen/return "multipart/form-data")]
          [(get weights [:attr-val-input__formenctype :alt 3] 100)
            (gen/return "text/plain")]])
        gmap (assoc gmap :attr-val-input__formenctype gen-attr-val-input__formenctype)

        gen-attr-val-input__min
        (igen/freq [
          [(get weights [:attr-val-input__min :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__min :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-input__min gen-attr-val-input__min)

        gen-attr-val-input__formmethod
        (igen/freq [
          [(get weights [:attr-val-input__formmethod :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__formmethod :alt 1] 100)
            (gen/return "GET")]
          [(get weights [:attr-val-input__formmethod :alt 2] 100)
            (gen/return "POST")]])
        gmap (assoc gmap :attr-val-input__formmethod gen-attr-val-input__formmethod)

        gen-attr-val-input__value
        (igen/freq [
          [(get weights [:attr-val-input__value :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__value :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-input__value gen-attr-val-input__value)

        gen-attr-val-input__accept
        (igen/freq [
          [(get weights [:attr-val-input__accept :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__accept :alt 1] 100)
            (gen/return "audio/*")]
          [(get weights [:attr-val-input__accept :alt 2] 100)
            (gen/return "image/*")]
          [(get weights [:attr-val-input__accept :alt 3] 100)
            (gen/return "video/*")]
          [(get weights [:attr-val-input__accept :alt 4] 100)
            (gen/return "STUB Set of comma-separated tokens")]
          [(get weights [:attr-val-input__accept :alt 5] 100)
            (:mime-type gmap)]])
        gmap (assoc gmap :attr-val-input__accept gen-attr-val-input__accept)

        gen-attr-val-input__formaction
        (igen/freq [
          [(get weights [:attr-val-input__formaction :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__formaction :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-input__formaction gen-attr-val-input__formaction)

        gen-attr-val-input__height
        (igen/freq [
          [(get weights [:attr-val-input__height :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__height :alt 1] 100)
            (:non-negative-integer gmap)]
          [(get weights [:attr-val-input__height :alt 2] 100)
            (gen/tuple
              (:non-negative-integer gmap)
              (igen/freq [
                [(get weights [:attr-val-input__height :alt 2 :cat 1 :alt 0] 100)
                  (:length-unit gmap)]
                [(get weights [:attr-val-input__height :alt 2 :cat 1 :alt 1] 100)
                  (gen/return "%")]]))]])
        gmap (assoc gmap :attr-val-input__height gen-attr-val-input__height)

        gen-attr-val-input__formtarget
        (igen/freq [
          [(get weights [:attr-val-input__formtarget :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__formtarget :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-input__formtarget gen-attr-val-input__formtarget)

        gen-attr-val-input__alt
        (igen/freq [
          [(get weights [:attr-val-input__alt :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__alt :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-input__alt gen-attr-val-input__alt)

        gen-attr-val-input__name
        (igen/freq [
          [(get weights [:attr-val-input__name :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__name :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-input__name gen-attr-val-input__name)

        gen-attr-val-input__size
        (igen/freq [
          [(get weights [:attr-val-input__size :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__size :alt 1] 100)
            (:non-negative-integer gmap)]])
        gmap (assoc gmap :attr-val-input__size gen-attr-val-input__size)

        gen-attr-val-input__type
        (igen/freq [
          [(get weights [:attr-val-input__type :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-input__type :alt 1] 100)
            (gen/return "button")]
          [(get weights [:attr-val-input__type :alt 2] 100)
            (gen/return "checkbox")]
          [(get weights [:attr-val-input__type :alt 3] 100)
            (gen/return "color")]
          [(get weights [:attr-val-input__type :alt 4] 100)
            (gen/return "date")]
          [(get weights [:attr-val-input__type :alt 5] 100)
            (gen/return "datetime-local")]
          [(get weights [:attr-val-input__type :alt 6] 100)
            (gen/return "email")]
          [(get weights [:attr-val-input__type :alt 7] 100)
            (gen/return "file")]
          [(get weights [:attr-val-input__type :alt 8] 100)
            (gen/return "hidden")]
          [(get weights [:attr-val-input__type :alt 9] 100)
            (gen/return "image")]
          [(get weights [:attr-val-input__type :alt 10] 100)
            (gen/return "month")]
          [(get weights [:attr-val-input__type :alt 11] 100)
            (gen/return "number")]
          [(get weights [:attr-val-input__type :alt 12] 100)
            (gen/return "password")]
          [(get weights [:attr-val-input__type :alt 13] 100)
            (gen/return "radio")]
          [(get weights [:attr-val-input__type :alt 14] 100)
            (gen/return "range")]
          [(get weights [:attr-val-input__type :alt 15] 100)
            (gen/return "reset")]
          [(get weights [:attr-val-input__type :alt 16] 100)
            (gen/return "search")]
          [(get weights [:attr-val-input__type :alt 17] 100)
            (gen/return "submit")]
          [(get weights [:attr-val-input__type :alt 18] 100)
            (gen/return "tel")]
          [(get weights [:attr-val-input__type :alt 19] 100)
            (gen/return "text")]
          [(get weights [:attr-val-input__type :alt 20] 100)
            (gen/return "time")]
          [(get weights [:attr-val-input__type :alt 21] 100)
            (gen/return "url")]
          [(get weights [:attr-val-input__type :alt 22] 100)
            (gen/return "week")]])
        gmap (assoc gmap :attr-val-input__type gen-attr-val-input__type)

        gen-input-attribute
        (igen/freq [
          [(get weights [:input-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "autofocus")
              (:opt-boolean gmap))]
          [(get weights [:input-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "checked")
              (:opt-boolean gmap))]
          [(get weights [:input-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "disabled")
              (:opt-boolean gmap))]
          [(get weights [:input-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "formnovalidate")
              (:opt-boolean gmap))]
          [(get weights [:input-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "multiple")
              (:opt-boolean gmap))]
          [(get weights [:input-attribute :alt 5] 100)
            (gen/tuple
              (gen/return "readonly")
              (:opt-boolean gmap))]
          [(get weights [:input-attribute :alt 6] 100)
            (gen/tuple
              (gen/return "required")
              (:opt-boolean gmap))]
          [(get weights [:input-attribute :alt 7] 100)
            (gen/tuple
              (gen/return "accept=\"")
              (:attr-val-input__accept gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 8] 100)
            (gen/tuple
              (gen/return "alt=\"")
              (:attr-val-input__alt gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 9] 100)
            (gen/tuple
              (gen/return "autocomplete=\"")
              (:attr-val-input__autocomplete gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 10] 100)
            (gen/tuple
              (gen/return "dirname=\"")
              (:attr-val-input__dirname gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 11] 100)
            (gen/tuple
              (gen/return "form=\"")
              (:attr-val-input__form gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 12] 100)
            (gen/tuple
              (gen/return "formaction=\"")
              (:attr-val-input__formaction gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 13] 100)
            (gen/tuple
              (gen/return "formenctype=\"")
              (:attr-val-input__formenctype gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 14] 100)
            (gen/tuple
              (gen/return "formmethod=\"")
              (:attr-val-input__formmethod gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 15] 100)
            (gen/tuple
              (gen/return "formtarget=\"")
              (:attr-val-input__formtarget gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 16] 100)
            (gen/tuple
              (gen/return "height=\"")
              (:attr-val-input__height gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 17] 100)
            (gen/tuple
              (gen/return "inputmode=\"")
              (:attr-val-input__inputmode gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 18] 100)
            (gen/tuple
              (gen/return "list=\"")
              (:attr-val-input__list gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 19] 100)
            (gen/tuple
              (gen/return "max=\"")
              (:attr-val-input__max gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 20] 100)
            (gen/tuple
              (gen/return "maxlength=\"")
              (:attr-val-input__maxlength gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 21] 100)
            (gen/tuple
              (gen/return "min=\"")
              (:attr-val-input__min gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 22] 100)
            (gen/tuple
              (gen/return "minlength=\"")
              (:attr-val-input__minlength gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 23] 100)
            (gen/tuple
              (gen/return "name=\"")
              (:attr-val-input__name gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 24] 100)
            (gen/tuple
              (gen/return "pattern=\"")
              (:attr-val-input__pattern gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 25] 100)
            (gen/tuple
              (gen/return "placeholder=\"")
              (:attr-val-input__placeholder gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 26] 100)
            (gen/tuple
              (gen/return "size=\"")
              (:attr-val-input__size gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 27] 100)
            (gen/tuple
              (gen/return "src=\"")
              (:attr-val-input__src gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 28] 100)
            (gen/tuple
              (gen/return "step=\"")
              (:attr-val-input__step gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 29] 100)
            (gen/tuple
              (gen/return "title=\"")
              (:attr-val-input__title gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 30] 100)
            (gen/tuple
              (gen/return "type=\"")
              (:attr-val-input__type gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 31] 100)
            (gen/tuple
              (gen/return "value=\"")
              (:attr-val-input__value gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 32] 100)
            (gen/tuple
              (gen/return "width=\"")
              (:attr-val-input__width gmap)
              (gen/return "\""))]
          [(get weights [:input-attribute :alt 33] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :input-attribute gen-input-attribute)

        gen-s-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :s-attribute gen-s-attribute)

        gen-attr-val-menu__type
        (igen/freq [
          [(get weights [:attr-val-menu__type :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-menu__type :alt 1] 100)
            (gen/return "context")]])
        gmap (assoc gmap :attr-val-menu__type gen-attr-val-menu__type)

        gen-attr-val-menu__label
        (igen/freq [
          [(get weights [:attr-val-menu__label :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-menu__label :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-menu__label gen-attr-val-menu__label)

        gen-menu-attribute
        (igen/freq [
          [(get weights [:menu-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "label=\"")
              (:attr-val-menu__label gmap)
              (gen/return "\""))]
          [(get weights [:menu-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "type=\"")
              (:attr-val-menu__type gmap)
              (gen/return "\""))]
          [(get weights [:menu-attribute :alt 2] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :menu-attribute gen-menu-attribute)

        gen-attr-val-keygen__challenge
        (igen/freq [
          [(get weights [:attr-val-keygen__challenge :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-keygen__challenge :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-keygen__challenge gen-attr-val-keygen__challenge)

        gen-keygen-attribute
        (igen/freq [
          [(get weights [:keygen-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "autofocus")
              (:opt-boolean gmap))]
          [(get weights [:keygen-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "disabled")
              (:opt-boolean gmap))]
          [(get weights [:keygen-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "challenge=\"")
              (:attr-val-keygen__challenge gmap)
              (gen/return "\""))]
          [(get weights [:keygen-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "form=\"")
              (:attr-val-keygen__form gmap)
              (gen/return "\""))]
          [(get weights [:keygen-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "keytype=\"")
              (:attr-val-keygen__keytype gmap)
              (gen/return "\""))]
          [(get weights [:keygen-attribute :alt 5] 100)
            (gen/tuple
              (gen/return "name=\"")
              (:attr-val-keygen__name gmap)
              (gen/return "\""))]
          [(get weights [:keygen-attribute :alt 6] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :keygen-attribute gen-keygen-attribute)

        gen-attr-val-data__value
        (igen/freq [
          [(get weights [:attr-val-data__value :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-data__value :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-data__value gen-attr-val-data__value)

        gen-attr-val-object__form
        (igen/freq [
          [(get weights [:attr-val-object__form :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-object__form :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-object__form gen-attr-val-object__form)

        gen-attr-val-form__autocomplete
        (igen/freq [
          [(get weights [:attr-val-form__autocomplete :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-form__autocomplete :alt 1] 100)
            (gen/return "off")]
          [(get weights [:attr-val-form__autocomplete :alt 2] 100)
            (gen/return "on")]])
        gmap (assoc gmap :attr-val-form__autocomplete gen-attr-val-form__autocomplete)

        gen-rt-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :rt-attribute gen-rt-attribute)

        gen-comment
        (chuck/string-from-regex #"<!--(?:[A-Za-z0-9_<>/\\ .]|-[A-Za-z0-9_<>/\\ .])*-->")
        gmap (assoc gmap :comment gen-comment)

        gen-attr-val-del__cite
        (igen/freq [
          [(get weights [:attr-val-del__cite :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-del__cite :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-del__cite gen-attr-val-del__cite)

        gen-address-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :address-attribute gen-address-attribute)

        gen-figcaption-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :figcaption-attribute gen-figcaption-attribute)

        gen-encoding-label
        (gen/return "utf-8")
        gmap (assoc gmap :encoding-label gen-encoding-label)

        gen-attr-val-script__charset
        (igen/freq [
          [(get weights [:attr-val-script__charset :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-script__charset :alt 1] 100)
            (:encoding-label gmap)]])
        gmap (assoc gmap :attr-val-script__charset gen-attr-val-script__charset)

        gen-attr-val-textarea__minlength
        (igen/freq [
          [(get weights [:attr-val-textarea__minlength :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-textarea__minlength :alt 1] 100)
            (:non-negative-integer gmap)]])
        gmap (assoc gmap :attr-val-textarea__minlength gen-attr-val-textarea__minlength)

        gen-attr-val-textarea__rows
        (igen/freq [
          [(get weights [:attr-val-textarea__rows :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-textarea__rows :alt 1] 100)
            (:non-negative-integer gmap)]])
        gmap (assoc gmap :attr-val-textarea__rows gen-attr-val-textarea__rows)

        gen-attr-val-optgroup__label
        (igen/freq [
          [(get weights [:attr-val-optgroup__label :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-optgroup__label :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-optgroup__label gen-attr-val-optgroup__label)

        gen-optgroup-attribute
        (igen/freq [
          [(get weights [:optgroup-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "disabled")
              (:opt-boolean gmap))]
          [(get weights [:optgroup-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "label=\"")
              (:attr-val-optgroup__label gmap)
              (gen/return "\""))]
          [(get weights [:optgroup-attribute :alt 2] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :optgroup-attribute gen-optgroup-attribute)

        gen-attr-val-link__sizes
        (igen/freq [
          [(get weights [:attr-val-link__sizes :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-link__sizes :alt 1] 100)
            (gen/return "STUB ASCII case-insensitive")]
          [(get weights [:attr-val-link__sizes :alt 2] 100)
            (gen/tuple
              (:name gmap)
              (gen/vector
                (gen/tuple
                  (:rS gmap)
                  (:name gmap))))]])
        gmap (assoc gmap :attr-val-link__sizes gen-attr-val-link__sizes)

        gen-attr-val-progress__value
        (igen/freq [
          [(get weights [:attr-val-progress__value :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-progress__value :alt 1] 100)
            (:floating-point-number gmap)]])
        gmap (assoc gmap :attr-val-progress__value gen-attr-val-progress__value)

        gen-attr-val-progress__max
        (igen/freq [
          [(get weights [:attr-val-progress__max :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-progress__max :alt 1] 100)
            (:floating-point-number gmap)]])
        gmap (assoc gmap :attr-val-progress__max gen-attr-val-progress__max)

        gen-progress-attribute
        (igen/freq [
          [(get weights [:progress-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "max=\"")
              (:attr-val-progress__max gmap)
              (gen/return "\""))]
          [(get weights [:progress-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "value=\"")
              (:attr-val-progress__value gmap)
              (gen/return "\""))]
          [(get weights [:progress-attribute :alt 2] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :progress-attribute gen-progress-attribute)

        gen-attr-val-del__datetime
        (igen/freq [
          [(get weights [:attr-val-del__datetime :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-del__datetime :alt 1] 100)
            (gen/return "STUB Valid date string with optional time")]])
        gmap (assoc gmap :attr-val-del__datetime gen-attr-val-del__datetime)]
    gmap))

(defn- html5-generators-part-4 [gmap weights]
  (let [
        gen-del-attribute
        (igen/freq [
          [(get weights [:del-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "cite=\"")
              (:attr-val-del__cite gmap)
              (gen/return "\""))]
          [(get weights [:del-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "datetime=\"")
              (:attr-val-del__datetime gmap)
              (gen/return "\""))]
          [(get weights [:del-attribute :alt 2] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :del-attribute gen-del-attribute)

        gen-span-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :span-attribute gen-span-attribute)

        gen-rb-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :rb-attribute gen-rb-attribute)

        gen-attr-val-th__headers
        (igen/freq [
          [(get weights [:attr-val-th__headers :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-th__headers :alt 1] 100)
            (gen/tuple
              (:name gmap)
              (gen/vector
                (gen/tuple
                  (:rS gmap)
                  (:name gmap))))]
          [(get weights [:attr-val-th__headers :alt 2] 100)
            (gen/return "STUB case-sensitive")]])
        gmap (assoc gmap :attr-val-th__headers gen-attr-val-th__headers)

        gen-attr-val-select__name
        (igen/freq [
          [(get weights [:attr-val-select__name :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-select__name :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-select__name gen-attr-val-select__name)

        gen-attr-val-style__title
        (igen/freq [
          [(get weights [:attr-val-style__title :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-style__title :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-style__title gen-attr-val-style__title)

        gen-attr-val-style__media
        (igen/freq [
          [(get weights [:attr-val-style__media :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-style__media :alt 1] 100)
            (gen/return "STUB Valid media query list")]])
        gmap (assoc gmap :attr-val-style__media gen-attr-val-style__media)

        gen-attr-val-style__nonce
        (igen/freq [
          [(get weights [:attr-val-style__nonce :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-style__nonce :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-style__nonce gen-attr-val-style__nonce)

        gen-attr-val-style__type
        (igen/freq [
          [(get weights [:attr-val-style__type :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-style__type :alt 1] 100)
            (:mime-type gmap)]])
        gmap (assoc gmap :attr-val-style__type gen-attr-val-style__type)

        gen-style-attribute
        (igen/freq [
          [(get weights [:style-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "media=\"")
              (:attr-val-style__media gmap)
              (gen/return "\""))]
          [(get weights [:style-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "nonce=\"")
              (:attr-val-style__nonce gmap)
              (gen/return "\""))]
          [(get weights [:style-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "title=\"")
              (:attr-val-style__title gmap)
              (gen/return "\""))]
          [(get weights [:style-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "type=\"")
              (:attr-val-style__type gmap)
              (gen/return "\""))]
          [(get weights [:style-attribute :alt 4] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :style-attribute gen-style-attribute)

        gen-attr-val-ins__cite
        (igen/freq [
          [(get weights [:attr-val-ins__cite :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-ins__cite :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-ins__cite gen-attr-val-ins__cite)

        gen-ins-attribute
        (igen/freq [
          [(get weights [:ins-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "cite=\"")
              (:attr-val-ins__cite gmap)
              (gen/return "\""))]
          [(get weights [:ins-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "datetime=\"")
              (:attr-val-ins__datetime gmap)
              (gen/return "\""))]
          [(get weights [:ins-attribute :alt 2] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :ins-attribute gen-ins-attribute)

        gen-picture-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :picture-attribute gen-picture-attribute)

        gen-attr-val-form__method
        (igen/freq [
          [(get weights [:attr-val-form__method :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-form__method :alt 1] 100)
            (gen/return "get")]
          [(get weights [:attr-val-form__method :alt 2] 100)
            (gen/return "post")]])
        gmap (assoc gmap :attr-val-form__method gen-attr-val-form__method)

        gen-nav-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :nav-attribute gen-nav-attribute)

        gen-entity-ref
        (gen/tuple
          (gen/return "&")
          (:name gmap)
          (gen/return ";"))
        gmap (assoc gmap :entity-ref gen-entity-ref)

        gen-attr-val-a__hreflang
        (igen/freq [
          [(get weights [:attr-val-a__hreflang :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-a__hreflang :alt 1] 100)
            (:lang gmap)]])
        gmap (assoc gmap :attr-val-a__hreflang gen-attr-val-a__hreflang)

        gen-rtc-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :rtc-attribute gen-rtc-attribute)

        gen-datalist-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :datalist-attribute gen-datalist-attribute)

        gen-code-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :code-attribute gen-code-attribute)

        gen-attr-val-abbr__title
        (igen/freq [
          [(get weights [:attr-val-abbr__title :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-abbr__title :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-abbr__title gen-attr-val-abbr__title)

        gen-abbr-attribute
        (igen/freq [
          [(get weights [:abbr-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "title=\"")
              (:attr-val-abbr__title gmap)
              (gen/return "\""))]
          [(get weights [:abbr-attribute :alt 1] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :abbr-attribute gen-abbr-attribute)

        gen-attr-val-object__height
        (igen/freq [
          [(get weights [:attr-val-object__height :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-object__height :alt 1] 100)
            (:non-negative-integer gmap)]
          [(get weights [:attr-val-object__height :alt 2] 100)
            (gen/tuple
              (:non-negative-integer gmap)
              (igen/freq [
                [(get weights [:attr-val-object__height :alt 2 :cat 1 :alt 0] 100)
                  (:length-unit gmap)]
                [(get weights [:attr-val-object__height :alt 2 :cat 1 :alt 1] 100)
                  (gen/return "%")]]))]])
        gmap (assoc gmap :attr-val-object__height gen-attr-val-object__height)

        gen-attr-val-object__width
        (igen/freq [
          [(get weights [:attr-val-object__width :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-object__width :alt 1] 100)
            (:non-negative-integer gmap)]
          [(get weights [:attr-val-object__width :alt 2] 100)
            (gen/tuple
              (:non-negative-integer gmap)
              (igen/freq [
                [(get weights [:attr-val-object__width :alt 2 :cat 1 :alt 0] 100)
                  (:length-unit gmap)]
                [(get weights [:attr-val-object__width :alt 2 :cat 1 :alt 1] 100)
                  (gen/return "%")]]))]])
        gmap (assoc gmap :attr-val-object__width gen-attr-val-object__width)

        gen-attr-val-object__type
        (igen/freq [
          [(get weights [:attr-val-object__type :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-object__type :alt 1] 100)
            (:mime-type gmap)]])
        gmap (assoc gmap :attr-val-object__type gen-attr-val-object__type)

        gen-object-attribute
        (igen/freq [
          [(get weights [:object-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "typemustmatch")
              (:opt-boolean gmap))]
          [(get weights [:object-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "data=\"")
              (:attr-val-object__data gmap)
              (gen/return "\""))]
          [(get weights [:object-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "form=\"")
              (:attr-val-object__form gmap)
              (gen/return "\""))]
          [(get weights [:object-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "height=\"")
              (:attr-val-object__height gmap)
              (gen/return "\""))]
          [(get weights [:object-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "name=\"")
              (:attr-val-object__name gmap)
              (gen/return "\""))]
          [(get weights [:object-attribute :alt 5] 100)
            (gen/tuple
              (gen/return "type=\"")
              (:attr-val-object__type gmap)
              (gen/return "\""))]
          [(get weights [:object-attribute :alt 6] 100)
            (gen/tuple
              (gen/return "width=\"")
              (:attr-val-object__width gmap)
              (gen/return "\""))]
          [(get weights [:object-attribute :alt 7] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :object-attribute gen-object-attribute)

        gen-tr-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :tr-attribute gen-tr-attribute)

        gen-attr-val-audio__preload
        (igen/freq [
          [(get weights [:attr-val-audio__preload :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-audio__preload :alt 1] 100)
            (gen/return "auto")]
          [(get weights [:attr-val-audio__preload :alt 2] 100)
            (gen/return "metadata")]
          [(get weights [:attr-val-audio__preload :alt 3] 100)
            (gen/return "none")]])
        gmap (assoc gmap :attr-val-audio__preload gen-attr-val-audio__preload)

        gen-attr-val-a__href
        (igen/freq [
          [(get weights [:attr-val-a__href :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-a__href :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-a__href gen-attr-val-a__href)

        gen-char-ref-dec
        (chuck/string-from-regex #"&#[0-9]{1,7};")
        gmap (assoc gmap :char-ref-dec gen-char-ref-dec)

        gen-char-ref-hex
        (chuck/string-from-regex #"&#x[0-9A-F]{1,6};")
        gmap (assoc gmap :char-ref-hex gen-char-ref-hex)

        gen-reference
        (igen/freq [
          [(get weights [:reference :alt 0] 100)
            (:entity-ref gmap)]
          [(get weights [:reference :alt 1] 100)
            (:char-ref-dec gmap)]
          [(get weights [:reference :alt 2] 100)
            (:char-ref-hex gmap)]])
        gmap (assoc gmap :reference gen-reference)

        gen-attr-val-textarea__autocomplete
        (igen/freq [
          [(get weights [:attr-val-textarea__autocomplete :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-textarea__autocomplete :alt 1] 100)
            (gen/return "STUB Autofill field")]])
        gmap (assoc gmap :attr-val-textarea__autocomplete gen-attr-val-textarea__autocomplete)

        gen-attr-val-script__type
        (igen/freq [
          [(get weights [:attr-val-script__type :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-script__type :alt 1] 100)
            (:mime-type gmap)]])
        gmap (assoc gmap :attr-val-script__type gen-attr-val-script__type)

        gen-sup-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :sup-attribute gen-sup-attribute)

        gen-attr-val-th__abbr
        (igen/freq [
          [(get weights [:attr-val-th__abbr :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-th__abbr :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-th__abbr gen-attr-val-th__abbr)

        gen-attr-val-th__rowspan
        (igen/freq [
          [(get weights [:attr-val-th__rowspan :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-th__rowspan :alt 1] 100)
            (:non-negative-integer gmap)]])
        gmap (assoc gmap :attr-val-th__rowspan gen-attr-val-th__rowspan)

        gen-attr-val-th__scope
        (igen/freq [
          [(get weights [:attr-val-th__scope :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-th__scope :alt 1] 100)
            (gen/return "col")]
          [(get weights [:attr-val-th__scope :alt 2] 100)
            (gen/return "colgroup")]
          [(get weights [:attr-val-th__scope :alt 3] 100)
            (gen/return "row")]
          [(get weights [:attr-val-th__scope :alt 4] 100)
            (gen/return "rowgroup")]])
        gmap (assoc gmap :attr-val-th__scope gen-attr-val-th__scope)

        gen-th-attribute
        (igen/freq [
          [(get weights [:th-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "abbr=\"")
              (:attr-val-th__abbr gmap)
              (gen/return "\""))]
          [(get weights [:th-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "colspan=\"")
              (:attr-val-th__colspan gmap)
              (gen/return "\""))]
          [(get weights [:th-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "headers=\"")
              (:attr-val-th__headers gmap)
              (gen/return "\""))]
          [(get weights [:th-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "rowspan=\"")
              (:attr-val-th__rowspan gmap)
              (gen/return "\""))]
          [(get weights [:th-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "scope=\"")
              (:attr-val-th__scope gmap)
              (gen/return "\""))]
          [(get weights [:th-attribute :alt 5] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :th-attribute gen-th-attribute)

        gen-attr-val-meter__low
        (igen/freq [
          [(get weights [:attr-val-meter__low :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-meter__low :alt 1] 100)
            (:floating-point-number gmap)]])
        gmap (assoc gmap :attr-val-meter__low gen-attr-val-meter__low)

        gen-attr-val-canvas__width
        (igen/freq [
          [(get weights [:attr-val-canvas__width :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-canvas__width :alt 1] 100)
            (:non-negative-integer gmap)]
          [(get weights [:attr-val-canvas__width :alt 2] 100)
            (gen/tuple
              (:non-negative-integer gmap)
              (igen/freq [
                [(get weights [:attr-val-canvas__width :alt 2 :cat 1 :alt 0] 100)
                  (:length-unit gmap)]
                [(get weights [:attr-val-canvas__width :alt 2 :cat 1 :alt 1] 100)
                  (gen/return "%")]]))]])
        gmap (assoc gmap :attr-val-canvas__width gen-attr-val-canvas__width)

        gen-dd-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :dd-attribute gen-dd-attribute)

        gen-attr-val-option__label
        (igen/freq [
          [(get weights [:attr-val-option__label :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-option__label :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-option__label gen-attr-val-option__label)

        gen-option-attribute
        (igen/freq [
          [(get weights [:option-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "disabled")
              (:opt-boolean gmap))]
          [(get weights [:option-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "selected")
              (:opt-boolean gmap))]
          [(get weights [:option-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "label=\"")
              (:attr-val-option__label gmap)
              (gen/return "\""))]
          [(get weights [:option-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "value=\"")
              (:attr-val-option__value gmap)
              (gen/return "\""))]
          [(get weights [:option-attribute :alt 4] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :option-attribute gen-option-attribute)

        gen-attr-val-select__autocomplete
        (igen/freq [
          [(get weights [:attr-val-select__autocomplete :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-select__autocomplete :alt 1] 100)
            (gen/return "STUB Autofill field")]])
        gmap (assoc gmap :attr-val-select__autocomplete gen-attr-val-select__autocomplete)

        gen-attr-val-select__form
        (igen/freq [
          [(get weights [:attr-val-select__form :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-select__form :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-select__form gen-attr-val-select__form)

        gen-select-attribute
        (igen/freq [
          [(get weights [:select-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "autofocus")
              (:opt-boolean gmap))]
          [(get weights [:select-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "disabled")
              (:opt-boolean gmap))]
          [(get weights [:select-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "multiple")
              (:opt-boolean gmap))]
          [(get weights [:select-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "required")
              (:opt-boolean gmap))]
          [(get weights [:select-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "autocomplete=\"")
              (:attr-val-select__autocomplete gmap)
              (gen/return "\""))]
          [(get weights [:select-attribute :alt 5] 100)
            (gen/tuple
              (gen/return "form=\"")
              (:attr-val-select__form gmap)
              (gen/return "\""))]
          [(get weights [:select-attribute :alt 6] 100)
            (gen/tuple
              (gen/return "name=\"")
              (:attr-val-select__name gmap)
              (gen/return "\""))]
          [(get weights [:select-attribute :alt 7] 100)
            (gen/tuple
              (gen/return "size=\"")
              (:attr-val-select__size gmap)
              (gen/return "\""))]
          [(get weights [:select-attribute :alt 8] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :select-attribute gen-select-attribute)

        gen-attr-val-a__download
        (gen/return "")
        gmap (assoc gmap :attr-val-a__download gen-attr-val-a__download)

        gen-attr-val-link__title
        (igen/freq [
          [(get weights [:attr-val-link__title :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-link__title :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-link__title gen-attr-val-link__title)

        gen-sub-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :sub-attribute gen-sub-attribute)]
    gmap))

(defn- html5-generators-part-5 [gmap weights]
  (let [
        gen-footer-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :footer-attribute gen-footer-attribute)

        gen-caption-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :caption-attribute gen-caption-attribute)

        gen-attr-val-textarea__placeholder
        (igen/freq [
          [(get weights [:attr-val-textarea__placeholder :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-textarea__placeholder :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-textarea__placeholder gen-attr-val-textarea__placeholder)

        gen-attr-val-td__headers
        (igen/freq [
          [(get weights [:attr-val-td__headers :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-td__headers :alt 1] 100)
            (gen/tuple
              (:name gmap)
              (gen/vector
                (gen/tuple
                  (:rS gmap)
                  (:name gmap))))]
          [(get weights [:attr-val-td__headers :alt 2] 100)
            (gen/return "STUB case-sensitive")]])
        gmap (assoc gmap :attr-val-td__headers gen-attr-val-td__headers)

        gen-tfoot-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :tfoot-attribute gen-tfoot-attribute)

        gen-attr-val-form__enctype
        (igen/freq [
          [(get weights [:attr-val-form__enctype :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-form__enctype :alt 1] 100)
            (gen/return "application/x-www-form-urlencoded")]
          [(get weights [:attr-val-form__enctype :alt 2] 100)
            (gen/return "multipart/form-data")]
          [(get weights [:attr-val-form__enctype :alt 3] 100)
            (gen/return "text/plain")]])
        gmap (assoc gmap :attr-val-form__enctype gen-attr-val-form__enctype)

        gen-template-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :template-attribute gen-template-attribute)

        gen-attr-val-q__cite
        (igen/freq [
          [(get weights [:attr-val-q__cite :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-q__cite :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-q__cite gen-attr-val-q__cite)

        gen-attr-val-param__value
        (igen/freq [
          [(get weights [:attr-val-param__value :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-param__value :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-param__value gen-attr-val-param__value)

        gen-main-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :main-attribute gen-main-attribute)

        gen-attr-val-video__poster
        (igen/freq [
          [(get weights [:attr-val-video__poster :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-video__poster :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-video__poster gen-attr-val-video__poster)

        gen-attr-val-video__src
        (igen/freq [
          [(get weights [:attr-val-video__src :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-video__src :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-video__src gen-attr-val-video__src)

        gen-attr-val-video__crossorigin
        (igen/freq [
          [(get weights [:attr-val-video__crossorigin :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-video__crossorigin :alt 1] 100)
            (gen/return "anonymous")]
          [(get weights [:attr-val-video__crossorigin :alt 2] 100)
            (gen/return "use-credentials")]])
        gmap (assoc gmap :attr-val-video__crossorigin gen-attr-val-video__crossorigin)

        gen-video-attribute
        (igen/freq [
          [(get weights [:video-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "autoplay")
              (:opt-boolean gmap))]
          [(get weights [:video-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "controls")
              (:opt-boolean gmap))]
          [(get weights [:video-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "loop")
              (:opt-boolean gmap))]
          [(get weights [:video-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "muted")
              (:opt-boolean gmap))]
          [(get weights [:video-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "crossorigin=\"")
              (:attr-val-video__crossorigin gmap)
              (gen/return "\""))]
          [(get weights [:video-attribute :alt 5] 100)
            (gen/tuple
              (gen/return "height=\"")
              (:attr-val-video__height gmap)
              (gen/return "\""))]
          [(get weights [:video-attribute :alt 6] 100)
            (gen/tuple
              (gen/return "poster=\"")
              (:attr-val-video__poster gmap)
              (gen/return "\""))]
          [(get weights [:video-attribute :alt 7] 100)
            (gen/tuple
              (gen/return "preload=\"")
              (:attr-val-video__preload gmap)
              (gen/return "\""))]
          [(get weights [:video-attribute :alt 8] 100)
            (gen/tuple
              (gen/return "src=\"")
              (:attr-val-video__src gmap)
              (gen/return "\""))]
          [(get weights [:video-attribute :alt 9] 100)
            (gen/tuple
              (gen/return "width=\"")
              (:attr-val-video__width gmap)
              (gen/return "\""))]
          [(get weights [:video-attribute :alt 10] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :video-attribute gen-video-attribute)

        gen-attr-val-textarea__inputmode
        (igen/freq [
          [(get weights [:attr-val-textarea__inputmode :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-textarea__inputmode :alt 1] 100)
            (gen/return "email")]
          [(get weights [:attr-val-textarea__inputmode :alt 2] 100)
            (gen/return "full-width-latin")]
          [(get weights [:attr-val-textarea__inputmode :alt 3] 100)
            (gen/return "kana")]
          [(get weights [:attr-val-textarea__inputmode :alt 4] 100)
            (gen/return "kana-name")]
          [(get weights [:attr-val-textarea__inputmode :alt 5] 100)
            (gen/return "katakana")]
          [(get weights [:attr-val-textarea__inputmode :alt 6] 100)
            (gen/return "latin")]
          [(get weights [:attr-val-textarea__inputmode :alt 7] 100)
            (gen/return "latin-name")]
          [(get weights [:attr-val-textarea__inputmode :alt 8] 100)
            (gen/return "latin-prose")]
          [(get weights [:attr-val-textarea__inputmode :alt 9] 100)
            (gen/return "numeric")]
          [(get weights [:attr-val-textarea__inputmode :alt 10] 100)
            (gen/return "tel")]
          [(get weights [:attr-val-textarea__inputmode :alt 11] 100)
            (gen/return "url")]
          [(get weights [:attr-val-textarea__inputmode :alt 12] 100)
            (gen/return "verbatim")]])
        gmap (assoc gmap :attr-val-textarea__inputmode gen-attr-val-textarea__inputmode)

        gen-attr-val-textarea__cols
        (igen/freq [
          [(get weights [:attr-val-textarea__cols :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-textarea__cols :alt 1] 100)
            (:non-negative-integer gmap)]])
        gmap (assoc gmap :attr-val-textarea__cols gen-attr-val-textarea__cols)

        gen-textarea-attribute
        (igen/freq [
          [(get weights [:textarea-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "autofocus")
              (:opt-boolean gmap))]
          [(get weights [:textarea-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "disabled")
              (:opt-boolean gmap))]
          [(get weights [:textarea-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "readonly")
              (:opt-boolean gmap))]
          [(get weights [:textarea-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "required")
              (:opt-boolean gmap))]
          [(get weights [:textarea-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "autocomplete=\"")
              (:attr-val-textarea__autocomplete gmap)
              (gen/return "\""))]
          [(get weights [:textarea-attribute :alt 5] 100)
            (gen/tuple
              (gen/return "cols=\"")
              (:attr-val-textarea__cols gmap)
              (gen/return "\""))]
          [(get weights [:textarea-attribute :alt 6] 100)
            (gen/tuple
              (gen/return "dirname=\"")
              (:attr-val-textarea__dirname gmap)
              (gen/return "\""))]
          [(get weights [:textarea-attribute :alt 7] 100)
            (gen/tuple
              (gen/return "form=\"")
              (:attr-val-textarea__form gmap)
              (gen/return "\""))]
          [(get weights [:textarea-attribute :alt 8] 100)
            (gen/tuple
              (gen/return "inputmode=\"")
              (:attr-val-textarea__inputmode gmap)
              (gen/return "\""))]
          [(get weights [:textarea-attribute :alt 9] 100)
            (gen/tuple
              (gen/return "maxlength=\"")
              (:attr-val-textarea__maxlength gmap)
              (gen/return "\""))]
          [(get weights [:textarea-attribute :alt 10] 100)
            (gen/tuple
              (gen/return "minlength=\"")
              (:attr-val-textarea__minlength gmap)
              (gen/return "\""))]
          [(get weights [:textarea-attribute :alt 11] 100)
            (gen/tuple
              (gen/return "name=\"")
              (:attr-val-textarea__name gmap)
              (gen/return "\""))]
          [(get weights [:textarea-attribute :alt 12] 100)
            (gen/tuple
              (gen/return "placeholder=\"")
              (:attr-val-textarea__placeholder gmap)
              (gen/return "\""))]
          [(get weights [:textarea-attribute :alt 13] 100)
            (gen/tuple
              (gen/return "rows=\"")
              (:attr-val-textarea__rows gmap)
              (gen/return "\""))]
          [(get weights [:textarea-attribute :alt 14] 100)
            (gen/tuple
              (gen/return "wrap=\"")
              (:attr-val-textarea__wrap gmap)
              (gen/return "\""))]
          [(get weights [:textarea-attribute :alt 15] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :textarea-attribute gen-textarea-attribute)

        gen-attr-val-a__rel
        (igen/freq [
          [(get weights [:attr-val-a__rel :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-a__rel :alt 1] 100)
            (gen/tuple
              (:name gmap)
              (gen/vector
                (gen/tuple
                  (:rS gmap)
                  (:name gmap))))]])
        gmap (assoc gmap :attr-val-a__rel gen-attr-val-a__rel)

        gen-attr-val-link__hreflang
        (igen/freq [
          [(get weights [:attr-val-link__hreflang :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-link__hreflang :alt 1] 100)
            (:lang gmap)]])
        gmap (assoc gmap :attr-val-link__hreflang gen-attr-val-link__hreflang)

        gen-attr-val-link__href
        (igen/freq [
          [(get weights [:attr-val-link__href :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-link__href :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-link__href gen-attr-val-link__href)

        gen-attr-val-link__rel
        (igen/freq [
          [(get weights [:attr-val-link__rel :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-link__rel :alt 1] 100)
            (gen/tuple
              (:name gmap)
              (gen/vector
                (gen/tuple
                  (:rS gmap)
                  (:name gmap))))]])
        gmap (assoc gmap :attr-val-link__rel gen-attr-val-link__rel)

        gen-attr-val-link__crossorigin
        (igen/freq [
          [(get weights [:attr-val-link__crossorigin :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-link__crossorigin :alt 1] 100)
            (gen/return "anonymous")]
          [(get weights [:attr-val-link__crossorigin :alt 2] 100)
            (gen/return "use-credentials")]])
        gmap (assoc gmap :attr-val-link__crossorigin gen-attr-val-link__crossorigin)

        gen-attr-val-link__type
        (igen/freq [
          [(get weights [:attr-val-link__type :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-link__type :alt 1] 100)
            (:mime-type gmap)]])
        gmap (assoc gmap :attr-val-link__type gen-attr-val-link__type)

        gen-attr-val-link__rev
        (igen/freq [
          [(get weights [:attr-val-link__rev :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-link__rev :alt 1] 100)
            (gen/tuple
              (:name gmap)
              (gen/vector
                (gen/tuple
                  (:rS gmap)
                  (:name gmap))))]])
        gmap (assoc gmap :attr-val-link__rev gen-attr-val-link__rev)

        gen-link-attribute
        (igen/freq [
          [(get weights [:link-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "crossorigin=\"")
              (:attr-val-link__crossorigin gmap)
              (gen/return "\""))]
          [(get weights [:link-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "href=\"")
              (:attr-val-link__href gmap)
              (gen/return "\""))]
          [(get weights [:link-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "hreflang=\"")
              (:attr-val-link__hreflang gmap)
              (gen/return "\""))]
          [(get weights [:link-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "media=\"")
              (:attr-val-link__media gmap)
              (gen/return "\""))]
          [(get weights [:link-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "rel=\"")
              (:attr-val-link__rel gmap)
              (gen/return "\""))]
          [(get weights [:link-attribute :alt 5] 100)
            (gen/tuple
              (gen/return "rev=\"")
              (:attr-val-link__rev gmap)
              (gen/return "\""))]
          [(get weights [:link-attribute :alt 6] 100)
            (gen/tuple
              (gen/return "sizes=\"")
              (:attr-val-link__sizes gmap)
              (gen/return "\""))]
          [(get weights [:link-attribute :alt 7] 100)
            (gen/tuple
              (gen/return "title=\"")
              (:attr-val-link__title gmap)
              (gen/return "\""))]
          [(get weights [:link-attribute :alt 8] 100)
            (gen/tuple
              (gen/return "type=\"")
              (:attr-val-link__type gmap)
              (gen/return "\""))]
          [(get weights [:link-attribute :alt 9] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :link-attribute gen-link-attribute)

        gen-attr-val-base__href
        (igen/freq [
          [(get weights [:attr-val-base__href :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-base__href :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-base__href gen-attr-val-base__href)

        gen-base-attribute
        (igen/freq [
          [(get weights [:base-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "href=\"")
              (:attr-val-base__href gmap)
              (gen/return "\""))]
          [(get weights [:base-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "target=\"")
              (:attr-val-base__target gmap)
              (gen/return "\""))]
          [(get weights [:base-attribute :alt 2] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :base-attribute gen-base-attribute)

        gen-dl-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :dl-attribute gen-dl-attribute)

        gen-hr-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :hr-attribute gen-hr-attribute)

        gen-attr-val-menuitem__command
        (igen/freq [
          [(get weights [:attr-val-menuitem__command :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-menuitem__command :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-menuitem__command gen-attr-val-menuitem__command)

        gen-attr-val-audio__crossorigin
        (igen/freq [
          [(get weights [:attr-val-audio__crossorigin :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-audio__crossorigin :alt 1] 100)
            (gen/return "anonymous")]
          [(get weights [:attr-val-audio__crossorigin :alt 2] 100)
            (gen/return "use-credentials")]])
        gmap (assoc gmap :attr-val-audio__crossorigin gen-attr-val-audio__crossorigin)

        gen-attr-val-audio__src
        (igen/freq [
          [(get weights [:attr-val-audio__src :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-audio__src :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-audio__src gen-attr-val-audio__src)

        gen-audio-attribute
        (igen/freq [
          [(get weights [:audio-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "autoplay")
              (:opt-boolean gmap))]
          [(get weights [:audio-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "controls")
              (:opt-boolean gmap))]
          [(get weights [:audio-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "loop")
              (:opt-boolean gmap))]
          [(get weights [:audio-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "muted")
              (:opt-boolean gmap))]
          [(get weights [:audio-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "crossorigin=\"")
              (:attr-val-audio__crossorigin gmap)
              (gen/return "\""))]
          [(get weights [:audio-attribute :alt 5] 100)
            (gen/tuple
              (gen/return "preload=\"")
              (:attr-val-audio__preload gmap)
              (gen/return "\""))]
          [(get weights [:audio-attribute :alt 6] 100)
            (gen/tuple
              (gen/return "src=\"")
              (:attr-val-audio__src gmap)
              (gen/return "\""))]
          [(get weights [:audio-attribute :alt 7] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :audio-attribute gen-audio-attribute)

        gen-mark-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :mark-attribute gen-mark-attribute)

        gen-blockquote-attribute
        (igen/freq [
          [(get weights [:blockquote-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "cite=\"")
              (:attr-val-blockquote__cite gmap)
              (gen/return "\""))]
          [(get weights [:blockquote-attribute :alt 1] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :blockquote-attribute gen-blockquote-attribute)

        gen-attr-val-img__usemap
        (igen/freq [
          [(get weights [:attr-val-img__usemap :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-img__usemap :alt 1] 100)
            (gen/return "STUB Valid hash-name reference")]])
        gmap (assoc gmap :attr-val-img__usemap gen-attr-val-img__usemap)

        gen-attr-val-bdo__dir
        (igen/freq [
          [(get weights [:attr-val-bdo__dir :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-bdo__dir :alt 1] 100)
            (gen/return "ltr")]
          [(get weights [:attr-val-bdo__dir :alt 2] 100)
            (gen/return "rtl")]])
        gmap (assoc gmap :attr-val-bdo__dir gen-attr-val-bdo__dir)

        gen-h2-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :h2-attribute gen-h2-attribute)

        gen-attr-val-a__rev
        (igen/freq [
          [(get weights [:attr-val-a__rev :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-a__rev :alt 1] 100)
            (gen/tuple
              (:name gmap)
              (gen/vector
                (gen/tuple
                  (:rS gmap)
                  (:name gmap))))]])
        gmap (assoc gmap :attr-val-a__rev gen-attr-val-a__rev)

        gen-attr-val-form__name
        (igen/freq [
          [(get weights [:attr-val-form__name :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-form__name :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-form__name gen-attr-val-form__name)

        gen-b-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :b-attribute gen-b-attribute)

        gen-attr-val-script__crossorigin
        (igen/freq [
          [(get weights [:attr-val-script__crossorigin :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-script__crossorigin :alt 1] 100)
            (gen/return "anonymous")]
          [(get weights [:attr-val-script__crossorigin :alt 2] 100)
            (gen/return "use-credentials")]])
        gmap (assoc gmap :attr-val-script__crossorigin gen-attr-val-script__crossorigin)

        gen-details-attribute
        (igen/freq [
          [(get weights [:details-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "open")
              (:opt-boolean gmap))]
          [(get weights [:details-attribute :alt 1] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :details-attribute gen-details-attribute)

        gen-attr-val-source__type
        (igen/freq [
          [(get weights [:attr-val-source__type :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-source__type :alt 1] 100)
            (:mime-type gmap)]])
        gmap (assoc gmap :attr-val-source__type gen-attr-val-source__type)

        gen-attr-val-meta__charset
        (igen/freq [
          [(get weights [:attr-val-meta__charset :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-meta__charset :alt 1] 100)
            (:encoding-label gmap)]])
        gmap (assoc gmap :attr-val-meta__charset gen-attr-val-meta__charset)

        gen-attr-val-meta__content
        (igen/freq [
          [(get weights [:attr-val-meta__content :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-meta__content :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-meta__content gen-attr-val-meta__content)

        gen-meta-attribute
        (igen/freq [
          [(get weights [:meta-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "charset=\"")
              (:attr-val-meta__charset gmap)
              (gen/return "\""))]
          [(get weights [:meta-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "content=\"")
              (:attr-val-meta__content gmap)
              (gen/return "\""))]
          [(get weights [:meta-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "http-equiv=\"")
              (:attr-val-meta__http-equiv gmap)
              (gen/return "\""))]
          [(get weights [:meta-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "name=\"")
              (:attr-val-meta__name gmap)
              (gen/return "\""))]
          [(get weights [:meta-attribute :alt 4] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :meta-attribute gen-meta-attribute)

        gen-attr-val-menuitem__type
        (igen/freq [
          [(get weights [:attr-val-menuitem__type :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-menuitem__type :alt 1] 100)
            (gen/return "checkbox")]
          [(get weights [:attr-val-menuitem__type :alt 2] 100)
            (gen/return "command")]
          [(get weights [:attr-val-menuitem__type :alt 3] 100)
            (gen/return "radio")]])
        gmap (assoc gmap :attr-val-menuitem__type gen-attr-val-menuitem__type)

        gen-header-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :header-attribute gen-header-attribute)

        gen-attr-val-meter__optimum
        (igen/freq [
          [(get weights [:attr-val-meter__optimum :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-meter__optimum :alt 1] 100)
            (:floating-point-number gmap)]])
        gmap (assoc gmap :attr-val-meter__optimum gen-attr-val-meter__optimum)]
    gmap))

(defn- html5-generators-part-6 [gmap weights]
  (let [
        gen-attr-val-meter__high
        (igen/freq [
          [(get weights [:attr-val-meter__high :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-meter__high :alt 1] 100)
            (:floating-point-number gmap)]])
        gmap (assoc gmap :attr-val-meter__high gen-attr-val-meter__high)

        gen-meter-attribute
        (igen/freq [
          [(get weights [:meter-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "high=\"")
              (:attr-val-meter__high gmap)
              (gen/return "\""))]
          [(get weights [:meter-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "low=\"")
              (:attr-val-meter__low gmap)
              (gen/return "\""))]
          [(get weights [:meter-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "max=\"")
              (:attr-val-meter__max gmap)
              (gen/return "\""))]
          [(get weights [:meter-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "min=\"")
              (:attr-val-meter__min gmap)
              (gen/return "\""))]
          [(get weights [:meter-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "optimum=\"")
              (:attr-val-meter__optimum gmap)
              (gen/return "\""))]
          [(get weights [:meter-attribute :alt 5] 100)
            (gen/tuple
              (gen/return "value=\"")
              (:attr-val-meter__value gmap)
              (gen/return "\""))]
          [(get weights [:meter-attribute :alt 6] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :meter-attribute gen-meter-attribute)

        gen-br-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :br-attribute gen-br-attribute)

        gen-attr-val-td__colspan
        (igen/freq [
          [(get weights [:attr-val-td__colspan :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-td__colspan :alt 1] 100)
            (:non-negative-integer gmap)]])
        gmap (assoc gmap :attr-val-td__colspan gen-attr-val-td__colspan)

        gen-td-attribute
        (igen/freq [
          [(get weights [:td-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "colspan=\"")
              (:attr-val-td__colspan gmap)
              (gen/return "\""))]
          [(get weights [:td-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "headers=\"")
              (:attr-val-td__headers gmap)
              (gen/return "\""))]
          [(get weights [:td-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "rowspan=\"")
              (:attr-val-td__rowspan gmap)
              (gen/return "\""))]
          [(get weights [:td-attribute :alt 3] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :td-attribute gen-td-attribute)

        gen-attr-val-img__width
        (igen/freq [
          [(get weights [:attr-val-img__width :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-img__width :alt 1] 100)
            (:non-negative-integer gmap)]
          [(get weights [:attr-val-img__width :alt 2] 100)
            (gen/tuple
              (:non-negative-integer gmap)
              (igen/freq [
                [(get weights [:attr-val-img__width :alt 2 :cat 1 :alt 0] 100)
                  (:length-unit gmap)]
                [(get weights [:attr-val-img__width :alt 2 :cat 1 :alt 1] 100)
                  (gen/return "%")]]))]])
        gmap (assoc gmap :attr-val-img__width gen-attr-val-img__width)

        gen-aside-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :aside-attribute gen-aside-attribute)

        gen-attr-val-form__action
        (igen/freq [
          [(get weights [:attr-val-form__action :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-form__action :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-form__action gen-attr-val-form__action)

        gen-attr-val-script__nonce
        (igen/freq [
          [(get weights [:attr-val-script__nonce :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-script__nonce :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-script__nonce gen-attr-val-script__nonce)

        gen-char-data
        (igen/freq [
          [(get weights [:char-data :alt 0] 100)
            (gen/return " ")]
          [(get weights [:char-data :alt 1] 100)
            (gen/return "p")]
          [(get weights [:char-data :alt 2] 100)
            (gen/return "&#x00c9;")]
          [(get weights [:char-data :alt 3] 100)
            (gen/return "X")]])
        gmap (assoc gmap :char-data gen-char-data)

        gen-content
        (igen/freq [
          [(get weights [:content :alt 0] 100)
            (:char-data gmap)]
          [(get weights [:content :alt 1] 100)
            (:reference gmap)]
          [(get weights [:content :alt 2] 100)
            (:comment gmap)]])
        gmap (assoc gmap :content gen-content)

        gen-attr-val-menuitem__icon
        (igen/freq [
          [(get weights [:attr-val-menuitem__icon :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-menuitem__icon :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-menuitem__icon gen-attr-val-menuitem__icon)

        gen-attr-val-script__src
        (igen/freq [
          [(get weights [:attr-val-script__src :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-script__src :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-script__src gen-attr-val-script__src)

        gen-script-attribute
        (igen/freq [
          [(get weights [:script-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "async")
              (:opt-boolean gmap))]
          [(get weights [:script-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "defer")
              (:opt-boolean gmap))]
          [(get weights [:script-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "charset=\"")
              (:attr-val-script__charset gmap)
              (gen/return "\""))]
          [(get weights [:script-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "crossorigin=\"")
              (:attr-val-script__crossorigin gmap)
              (gen/return "\""))]
          [(get weights [:script-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "nonce=\"")
              (:attr-val-script__nonce gmap)
              (gen/return "\""))]
          [(get weights [:script-attribute :alt 5] 100)
            (gen/tuple
              (gen/return "src=\"")
              (:attr-val-script__src gmap)
              (gen/return "\""))]
          [(get weights [:script-attribute :alt 6] 100)
            (gen/tuple
              (gen/return "type=\"")
              (:attr-val-script__type gmap)
              (gen/return "\""))]
          [(get weights [:script-attribute :alt 7] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :script-attribute gen-script-attribute)

        gen-data-attribute
        (igen/freq [
          [(get weights [:data-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "value=\"")
              (:attr-val-data__value gmap)
              (gen/return "\""))]
          [(get weights [:data-attribute :alt 1] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :data-attribute gen-data-attribute)

        gen-bdo-attribute
        (igen/freq [
          [(get weights [:bdo-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "dir=\"")
              (:attr-val-bdo__dir gmap)
              (gen/return "\""))]
          [(get weights [:bdo-attribute :alt 1] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :bdo-attribute gen-bdo-attribute)

        gen-attr-val-param__name
        (igen/freq [
          [(get weights [:attr-val-param__name :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-param__name :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-param__name gen-attr-val-param__name)

        gen-attr-val-menuitem__label
        (igen/freq [
          [(get weights [:attr-val-menuitem__label :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-menuitem__label :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-menuitem__label gen-attr-val-menuitem__label)

        gen-li-attribute
        (igen/freq [
          [(get weights [:li-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "value=\"")
              (:attr-val-li__value gmap)
              (gen/return "\""))]
          [(get weights [:li-attribute :alt 1] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :li-attribute gen-li-attribute)

        gen-u-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :u-attribute gen-u-attribute)

        gen-attr-val-source__srcset
        (igen/freq [
          [(get weights [:attr-val-source__srcset :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-source__srcset :alt 1] 100)
            (gen/return "STUB image candidate strings")]])
        gmap (assoc gmap :attr-val-source__srcset gen-attr-val-source__srcset)

        gen-a-attribute
        (igen/freq [
          [(get weights [:a-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "download=\"")
              (:attr-val-a__download gmap)
              (gen/return "\""))]
          [(get weights [:a-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "href=\"")
              (:attr-val-a__href gmap)
              (gen/return "\""))]
          [(get weights [:a-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "hreflang=\"")
              (:attr-val-a__hreflang gmap)
              (gen/return "\""))]
          [(get weights [:a-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "rel=\"")
              (:attr-val-a__rel gmap)
              (gen/return "\""))]
          [(get weights [:a-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "rev=\"")
              (:attr-val-a__rev gmap)
              (gen/return "\""))]
          [(get weights [:a-attribute :alt 5] 100)
            (gen/tuple
              (gen/return "target=\"")
              (:attr-val-a__target gmap)
              (gen/return "\""))]
          [(get weights [:a-attribute :alt 6] 100)
            (gen/tuple
              (gen/return "type=\"")
              (:attr-val-a__type gmap)
              (gen/return "\""))]
          [(get weights [:a-attribute :alt 7] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :a-attribute gen-a-attribute)

        gen-attr-val-form__accept-charset
        (igen/freq [
          [(get weights [:attr-val-form__accept-charset :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-form__accept-charset :alt 1] 100)
            (gen/return "STUB ASCII case-insensitive")]
          [(get weights [:attr-val-form__accept-charset :alt 2] 100)
            (gen/return "STUB ASCII-compatible encodings")]
          [(get weights [:attr-val-form__accept-charset :alt 3] 100)
            (gen/tuple
              (:name gmap)
              (gen/vector
                (gen/tuple
                  (:rS gmap)
                  (:name gmap))))]
          [(get weights [:attr-val-form__accept-charset :alt 4] 100)
            (gen/return "STUB labels")]])
        gmap (assoc gmap :attr-val-form__accept-charset gen-attr-val-form__accept-charset)

        gen-attr-val-menuitem__radiogroup
        (igen/freq [
          [(get weights [:attr-val-menuitem__radiogroup :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-menuitem__radiogroup :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-menuitem__radiogroup gen-attr-val-menuitem__radiogroup)

        gen-attr-val-menuitem__title
        (igen/freq [
          [(get weights [:attr-val-menuitem__title :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-menuitem__title :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-menuitem__title gen-attr-val-menuitem__title)

        gen-menuitem-attribute
        (igen/freq [
          [(get weights [:menuitem-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "checked")
              (:opt-boolean gmap))]
          [(get weights [:menuitem-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "default")
              (:opt-boolean gmap))]
          [(get weights [:menuitem-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "disabled")
              (:opt-boolean gmap))]
          [(get weights [:menuitem-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "command=\"")
              (:attr-val-menuitem__command gmap)
              (gen/return "\""))]
          [(get weights [:menuitem-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "icon=\"")
              (:attr-val-menuitem__icon gmap)
              (gen/return "\""))]
          [(get weights [:menuitem-attribute :alt 5] 100)
            (gen/tuple
              (gen/return "label=\"")
              (:attr-val-menuitem__label gmap)
              (gen/return "\""))]
          [(get weights [:menuitem-attribute :alt 6] 100)
            (gen/tuple
              (gen/return "radiogroup=\"")
              (:attr-val-menuitem__radiogroup gmap)
              (gen/return "\""))]
          [(get weights [:menuitem-attribute :alt 7] 100)
            (gen/tuple
              (gen/return "title=\"")
              (:attr-val-menuitem__title gmap)
              (gen/return "\""))]
          [(get weights [:menuitem-attribute :alt 8] 100)
            (gen/tuple
              (gen/return "type=\"")
              (:attr-val-menuitem__type gmap)
              (gen/return "\""))]
          [(get weights [:menuitem-attribute :alt 9] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :menuitem-attribute gen-menuitem-attribute)

        gen-ruby-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :ruby-attribute gen-ruby-attribute)

        gen-attr-val-source__src
        (igen/freq [
          [(get weights [:attr-val-source__src :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-source__src :alt 1] 100)
            (:url gmap)]])
        gmap (assoc gmap :attr-val-source__src gen-attr-val-source__src)

        gen-legend-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :legend-attribute gen-legend-attribute)

        gen-attr-val-col__span
        (igen/freq [
          [(get weights [:attr-val-col__span :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-col__span :alt 1] 100)
            (:non-negative-integer gmap)]])
        gmap (assoc gmap :attr-val-col__span gen-attr-val-col__span)

        gen-col-attribute
        (igen/freq [
          [(get weights [:col-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "span=\"")
              (:attr-val-col__span gmap)
              (gen/return "\""))]
          [(get weights [:col-attribute :alt 1] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :col-attribute gen-col-attribute)

        gen-cite-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :cite-attribute gen-cite-attribute)

        gen-canvas-attribute
        (igen/freq [
          [(get weights [:canvas-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "height=\"")
              (:attr-val-canvas__height gmap)
              (gen/return "\""))]
          [(get weights [:canvas-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "width=\"")
              (:attr-val-canvas__width gmap)
              (gen/return "\""))]
          [(get weights [:canvas-attribute :alt 2] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :canvas-attribute gen-canvas-attribute)

        gen-attr-val-fieldset__form
        (igen/freq [
          [(get weights [:attr-val-fieldset__form :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-fieldset__form :alt 1] 100)
            (:name gmap)]])
        gmap (assoc gmap :attr-val-fieldset__form gen-attr-val-fieldset__form)

        gen-table-attribute
        (igen/freq [
          [(get weights [:table-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "border=\"")
              (:attr-val-table__border gmap)
              (gen/return "\""))]
          [(get weights [:table-attribute :alt 1] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :table-attribute gen-table-attribute)

        gen-form-attribute
        (igen/freq [
          [(get weights [:form-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "novalidate")
              (:opt-boolean gmap))]
          [(get weights [:form-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "accept-charset=\"")
              (:attr-val-form__accept-charset gmap)
              (gen/return "\""))]
          [(get weights [:form-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "action=\"")
              (:attr-val-form__action gmap)
              (gen/return "\""))]
          [(get weights [:form-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "autocomplete=\"")
              (:attr-val-form__autocomplete gmap)
              (gen/return "\""))]
          [(get weights [:form-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "enctype=\"")
              (:attr-val-form__enctype gmap)
              (gen/return "\""))]
          [(get weights [:form-attribute :alt 5] 100)
            (gen/tuple
              (gen/return "method=\"")
              (:attr-val-form__method gmap)
              (gen/return "\""))]
          [(get weights [:form-attribute :alt 6] 100)
            (gen/tuple
              (gen/return "name=\"")
              (:attr-val-form__name gmap)
              (gen/return "\""))]
          [(get weights [:form-attribute :alt 7] 100)
            (gen/tuple
              (gen/return "target=\"")
              (:attr-val-form__target gmap)
              (gen/return "\""))]
          [(get weights [:form-attribute :alt 8] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :form-attribute gen-form-attribute)

        gen-param-attribute
        (igen/freq [
          [(get weights [:param-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "name=\"")
              (:attr-val-param__name gmap)
              (gen/return "\""))]
          [(get weights [:param-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "value=\"")
              (:attr-val-param__value gmap)
              (gen/return "\""))]
          [(get weights [:param-attribute :alt 2] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :param-attribute gen-param-attribute)

        gen-article-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :article-attribute gen-article-attribute)

        gen-q-attribute
        (igen/freq [
          [(get weights [:q-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "cite=\"")
              (:attr-val-q__cite gmap)
              (gen/return "\""))]
          [(get weights [:q-attribute :alt 1] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :q-attribute gen-q-attribute)

        gen-fieldset-attribute
        (igen/freq [
          [(get weights [:fieldset-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "disabled")
              (:opt-boolean gmap))]
          [(get weights [:fieldset-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "form=\"")
              (:attr-val-fieldset__form gmap)
              (gen/return "\""))]
          [(get weights [:fieldset-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "name=\"")
              (:attr-val-fieldset__name gmap)
              (gen/return "\""))]
          [(get weights [:fieldset-attribute :alt 3] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :fieldset-attribute gen-fieldset-attribute)

        gen-attr-val-img__alt
        (igen/freq [
          [(get weights [:attr-val-img__alt :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-img__alt :alt 1] 100)
            (:attribute-data gmap)]])
        gmap (assoc gmap :attr-val-img__alt gen-attr-val-img__alt)

        gen-img-attribute
        (igen/freq [
          [(get weights [:img-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "ismap")
              (:opt-boolean gmap))]
          [(get weights [:img-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "alt=\"")
              (:attr-val-img__alt gmap)
              (gen/return "\""))]
          [(get weights [:img-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "crossorigin=\"")
              (:attr-val-img__crossorigin gmap)
              (gen/return "\""))]
          [(get weights [:img-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "height=\"")
              (:attr-val-img__height gmap)
              (gen/return "\""))]
          [(get weights [:img-attribute :alt 4] 100)
            (gen/tuple
              (gen/return "sizes=\"")
              (:attr-val-img__sizes gmap)
              (gen/return "\""))]
          [(get weights [:img-attribute :alt 5] 100)
            (gen/tuple
              (gen/return "src=\"")
              (:attr-val-img__src gmap)
              (gen/return "\""))]
          [(get weights [:img-attribute :alt 6] 100)
            (gen/tuple
              (gen/return "srcset=\"")
              rgen/image-path
              (gen/return "\""))]
          [(get weights [:img-attribute :alt 7] 100)
            (gen/tuple
              (gen/return "usemap=\"")
              (:attr-val-img__usemap gmap)
              (gen/return "\""))]
          [(get weights [:img-attribute :alt 8] 100)
            (gen/tuple
              (gen/return "width=\"")
              (:attr-val-img__width gmap)
              (gen/return "\""))]
          [(get weights [:img-attribute :alt 9] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :img-attribute gen-img-attribute)

        gen-bdi-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :bdi-attribute gen-bdi-attribute)

        gen-source-attribute
        (igen/freq [
          [(get weights [:source-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "sizes=\"")
              (:attr-val-source__sizes gmap)
              (gen/return "\""))]
          [(get weights [:source-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "src=\"")
              (:attr-val-source__src gmap)
              (gen/return "\""))]
          [(get weights [:source-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "srcset=\"")
              (:attr-val-source__srcset gmap)
              (gen/return "\""))]
          [(get weights [:source-attribute :alt 3] 100)
            (gen/tuple
              (gen/return "type=\"")
              (:attr-val-source__type gmap)
              (gen/return "\""))]
          [(get weights [:source-attribute :alt 4] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :source-attribute gen-source-attribute)

        gen-div-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :div-attribute gen-div-attribute)

        gen-element
        (gen/recursive-gen
          (fn [inner]
            (igen/freq [
              [(get weights [:element :alt 0] 100)
                (gen/tuple
                  (gen/return "<a")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:a-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 0 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 0 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</a>"))]
              [(get weights [:element :alt 1] 100)
                (gen/tuple
                  (gen/return "<abbr")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:abbr-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 1 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 1 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</abbr>"))]
              [(get weights [:element :alt 2] 100)
                (gen/tuple
                  (gen/return "<address")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:address-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 2 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 2 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</address>"))]
              [(get weights [:element :alt 3] 100)
                (gen/tuple
                  (gen/return "<area")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:area-attribute gmap)))
                  (gen/return ">"))]
              [(get weights [:element :alt 4] 100)
                (gen/tuple
                  (gen/return "<article")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:article-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 4 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 4 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</article>"))]
              [(get weights [:element :alt 5] 100)
                (gen/tuple
                  (gen/return "<aside")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:aside-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 5 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 5 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</aside>"))]
              [(get weights [:element :alt 6] 100)
                (gen/tuple
                  (gen/return "<audio")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:audio-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 6 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 6 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</audio>"))]
              [(get weights [:element :alt 7] 100)
                (gen/tuple
                  (gen/return "<b")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:b-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 7 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 7 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</b>"))]
              [(get weights [:element :alt 8] 100)
                (gen/tuple
                  (gen/return "<base")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:base-attribute gmap)))
                  (gen/return ">"))]
              [(get weights [:element :alt 9] 100)
                (gen/tuple
                  (gen/return "<bdi")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:bdi-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 9 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 9 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</bdi>"))]
              [(get weights [:element :alt 10] 100)
                (gen/tuple
                  (gen/return "<bdo")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:bdo-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 10 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 10 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</bdo>"))]
              [(get weights [:element :alt 11] 100)
                (gen/tuple
                  (gen/return "<blockquote")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:blockquote-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 11 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 11 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</blockquote>"))]
              [(get weights [:element :alt 12] 100)
                (gen/tuple
                  (gen/return "<br")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:br-attribute gmap)))
                  (gen/return ">"))]
              [(get weights [:element :alt 13] 100)
                (gen/tuple
                  (gen/return "<button")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:button-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 13 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 13 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</button>"))]
              [(get weights [:element :alt 14] 100)
                (gen/tuple
                  (gen/return "<canvas")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:canvas-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 14 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 14 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</canvas>"))]
              [(get weights [:element :alt 15] 100)
                (gen/tuple
                  (gen/return "<caption")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:caption-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 15 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 15 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</caption>"))]
              [(get weights [:element :alt 16] 100)
                (gen/tuple
                  (gen/return "<cite")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:cite-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 16 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 16 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</cite>"))]
              [(get weights [:element :alt 17] 100)
                (gen/tuple
                  (gen/return "<code")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:code-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 17 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 17 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</code>"))]
              [(get weights [:element :alt 18] 100)
                (gen/tuple
                  (gen/return "<col")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:col-attribute gmap)))
                  (gen/return ">"))]
              [(get weights [:element :alt 19] 100)
                (gen/tuple
                  (gen/return "<colgroup")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:colgroup-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 19 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 19 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</colgroup>"))]
              [(get weights [:element :alt 20] 100)
                (gen/tuple
                  (gen/return "<data")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:data-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 20 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 20 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</data>"))]
              [(get weights [:element :alt 21] 100)
                (gen/tuple
                  (gen/return "<datalist")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:datalist-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 21 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 21 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</datalist>"))]
              [(get weights [:element :alt 22] 100)
                (gen/tuple
                  (gen/return "<dd")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:dd-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 22 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 22 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</dd>"))]
              [(get weights [:element :alt 23] 100)
                (gen/tuple
                  (gen/return "<del")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:del-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 23 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 23 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</del>"))]
              [(get weights [:element :alt 24] 100)
                (gen/tuple
                  (gen/return "<details")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:details-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 24 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 24 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</details>"))]
              [(get weights [:element :alt 25] 100)
                (gen/tuple
                  (gen/return "<dfn")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:dfn-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 25 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 25 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</dfn>"))]
              [(get weights [:element :alt 26] 100)
                (gen/tuple
                  (gen/return "<div")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:div-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 26 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 26 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</div>"))]
              [(get weights [:element :alt 27] 100)
                (gen/tuple
                  (gen/return "<dl")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:dl-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 27 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 27 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</dl>"))]
              [(get weights [:element :alt 28] 100)
                (gen/tuple
                  (gen/return "<dt")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:dt-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 28 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 28 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</dt>"))]
              [(get weights [:element :alt 29] 100)
                (gen/tuple
                  (gen/return "<em")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:em-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 29 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 29 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</em>"))]
              [(get weights [:element :alt 30] 100)
                (gen/tuple
                  (gen/return "<embed")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:embed-attribute gmap)))
                  (gen/return ">"))]
              [(get weights [:element :alt 31] 100)
                (gen/tuple
                  (gen/return "<fieldset")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:fieldset-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 31 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 31 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</fieldset>"))]
              [(get weights [:element :alt 32] 100)
                (gen/tuple
                  (gen/return "<figcaption")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:figcaption-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 32 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 32 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</figcaption>"))]
              [(get weights [:element :alt 33] 100)
                (gen/tuple
                  (gen/return "<figure")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:figure-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 33 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 33 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</figure>"))]
              [(get weights [:element :alt 34] 100)
                (gen/tuple
                  (gen/return "<footer")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:footer-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 34 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 34 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</footer>"))]
              [(get weights [:element :alt 35] 100)
                (gen/tuple
                  (gen/return "<form")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:form-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 35 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 35 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</form>"))]
              [(get weights [:element :alt 36] 100)
                (gen/tuple
                  (gen/return "<h1")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:h1-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 36 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 36 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</h1>"))]
              [(get weights [:element :alt 37] 100)
                (gen/tuple
                  (gen/return "<h2")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:h2-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 37 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 37 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</h2>"))]
              [(get weights [:element :alt 38] 100)
                (gen/tuple
                  (gen/return "<h3")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:h3-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 38 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 38 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</h3>"))]
              [(get weights [:element :alt 39] 100)
                (gen/tuple
                  (gen/return "<h4")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:h4-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 39 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 39 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</h4>"))]
              [(get weights [:element :alt 40] 100)
                (gen/tuple
                  (gen/return "<h5")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:h5-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 40 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 40 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</h5>"))]
              [(get weights [:element :alt 41] 100)
                (gen/tuple
                  (gen/return "<h6")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:h6-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 41 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 41 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</h6>"))]
              [(get weights [:element :alt 42] 100)
                (gen/tuple
                  (gen/return "<header")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:header-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 42 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 42 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</header>"))]
              [(get weights [:element :alt 43] 100)
                (gen/tuple
                  (gen/return "<hr")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:hr-attribute gmap)))
                  (gen/return ">"))]
              [(get weights [:element :alt 44] 100)
                (gen/tuple
                  (gen/return "<i")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:i-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 44 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 44 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</i>"))]
              [(get weights [:element :alt 45] 100)
                (gen/tuple
                  (gen/return "<iframe")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:iframe-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 45 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 45 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</iframe>"))]
              [(get weights [:element :alt 46] 100)
                (gen/tuple
                  (gen/return "<img")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:img-attribute gmap)))
                  (gen/return ">"))]
              [(get weights [:element :alt 47] 100)
                (gen/tuple
                  (gen/return "<input")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:input-attribute gmap)))
                  (gen/return ">"))]
              [(get weights [:element :alt 48] 100)
                (gen/tuple
                  (gen/return "<ins")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:ins-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 48 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 48 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</ins>"))]
              [(get weights [:element :alt 49] 100)
                (gen/tuple
                  (gen/return "<kbd")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:kbd-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 49 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 49 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</kbd>"))]
              [(get weights [:element :alt 50] 100)
                (gen/tuple
                  (gen/return "<keygen")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:keygen-attribute gmap)))
                  (gen/return ">"))]
              [(get weights [:element :alt 51] 100)
                (gen/tuple
                  (gen/return "<label")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:label-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 51 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 51 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</label>"))]
              [(get weights [:element :alt 52] 100)
                (gen/tuple
                  (gen/return "<legend")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:legend-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 52 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 52 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</legend>"))]
              [(get weights [:element :alt 53] 100)
                (gen/tuple
                  (gen/return "<li")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:li-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 53 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 53 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</li>"))]
              [(get weights [:element :alt 54] 100)
                (gen/tuple
                  (gen/return "<link")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:link-attribute gmap)))
                  (gen/return ">"))]
              [(get weights [:element :alt 55] 100)
                (gen/tuple
                  (gen/return "<main")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:main-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 55 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 55 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</main>"))]
              [(get weights [:element :alt 56] 100)
                (gen/tuple
                  (gen/return "<map")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:map-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 56 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 56 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</map>"))]
              [(get weights [:element :alt 57] 100)
                (gen/tuple
                  (gen/return "<mark")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:mark-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 57 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 57 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</mark>"))]
              [(get weights [:element :alt 58] 100)
                (gen/tuple
                  (gen/return "<menu")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:menu-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 58 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 58 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</menu>"))]
              [(get weights [:element :alt 59] 100)
                (gen/tuple
                  (gen/return "<menuitem")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:menuitem-attribute gmap)))
                  (gen/return ">"))]
              [(get weights [:element :alt 60] 100)
                (gen/tuple
                  (gen/return "<meta")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:meta-attribute gmap)))
                  (gen/return ">"))]
              [(get weights [:element :alt 61] 100)
                (gen/tuple
                  (gen/return "<meter")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:meter-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 61 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 61 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</meter>"))]
              [(get weights [:element :alt 62] 100)
                (gen/tuple
                  (gen/return "<nav")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:nav-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 62 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 62 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</nav>"))]
              [(get weights [:element :alt 63] 100)
                (gen/tuple
                  (gen/return "<noscript")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:noscript-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 63 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 63 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</noscript>"))]
              [(get weights [:element :alt 64] 100)
                (gen/tuple
                  (gen/return "<object")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:object-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 64 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 64 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</object>"))]
              [(get weights [:element :alt 65] 100)
                (gen/tuple
                  (gen/return "<ol")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:ol-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 65 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 65 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</ol>"))]
              [(get weights [:element :alt 66] 100)
                (gen/tuple
                  (gen/return "<optgroup")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:optgroup-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 66 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 66 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</optgroup>"))]
              [(get weights [:element :alt 67] 100)
                (gen/tuple
                  (gen/return "<option")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:option-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 67 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 67 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</option>"))]
              [(get weights [:element :alt 68] 100)
                (gen/tuple
                  (gen/return "<output")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:output-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 68 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 68 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</output>"))]
              [(get weights [:element :alt 69] 100)
                (gen/tuple
                  (gen/return "<p")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:p-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 69 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 69 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</p>"))]
              [(get weights [:element :alt 70] 100)
                (gen/tuple
                  (gen/return "<param")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:param-attribute gmap)))
                  (gen/return ">"))]
              [(get weights [:element :alt 71] 100)
                (gen/tuple
                  (gen/return "<picture")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:picture-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 71 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 71 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</picture>"))]
              [(get weights [:element :alt 72] 100)
                (gen/tuple
                  (gen/return "<pre")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:pre-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 72 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 72 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</pre>"))]
              [(get weights [:element :alt 73] 100)
                (gen/tuple
                  (gen/return "<progress")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:progress-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 73 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 73 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</progress>"))]
              [(get weights [:element :alt 74] 100)
                (gen/tuple
                  (gen/return "<q")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:q-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 74 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 74 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</q>"))]
              [(get weights [:element :alt 75] 100)
                (gen/tuple
                  (gen/return "<rb")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:rb-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 75 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 75 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</rb>"))]
              [(get weights [:element :alt 76] 100)
                (gen/tuple
                  (gen/return "<rp")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:rp-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 76 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 76 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</rp>"))]
              [(get weights [:element :alt 77] 100)
                (gen/tuple
                  (gen/return "<rt")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:rt-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 77 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 77 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</rt>"))]
              [(get weights [:element :alt 78] 100)
                (gen/tuple
                  (gen/return "<rtc")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:rtc-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 78 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 78 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</rtc>"))]
              [(get weights [:element :alt 79] 100)
                (gen/tuple
                  (gen/return "<ruby")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:ruby-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 79 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 79 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</ruby>"))]
              [(get weights [:element :alt 80] 100)
                (gen/tuple
                  (gen/return "<s")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:s-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 80 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 80 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</s>"))]
              [(get weights [:element :alt 81] 100)
                (gen/tuple
                  (gen/return "<samp")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:samp-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 81 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 81 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</samp>"))]
              [(get weights [:element :alt 82] 100)
                (gen/tuple
                  (gen/return "<script")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:script-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 82 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 82 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</script>"))]
              [(get weights [:element :alt 83] 100)
                (gen/tuple
                  (gen/return "<section")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:section-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 83 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 83 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</section>"))]
              [(get weights [:element :alt 84] 100)
                (gen/tuple
                  (gen/return "<select")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:select-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 84 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 84 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</select>"))]
              [(get weights [:element :alt 85] 100)
                (gen/tuple
                  (gen/return "<small")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:small-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 85 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 85 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</small>"))]
              [(get weights [:element :alt 86] 100)
                (gen/tuple
                  (gen/return "<source")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:source-attribute gmap)))
                  (gen/return ">"))]
              [(get weights [:element :alt 87] 100)
                (gen/tuple
                  (gen/return "<span")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:span-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 87 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 87 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</span>"))]
              [(get weights [:element :alt 88] 100)
                (gen/tuple
                  (gen/return "<strong")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:strong-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 88 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 88 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</strong>"))]
              [(get weights [:element :alt 89] 100)
                (gen/tuple
                  (gen/return "<style")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:style-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 89 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 89 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</style>"))]
              [(get weights [:element :alt 90] 100)
                (gen/tuple
                  (gen/return "<sub")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:sub-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 90 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 90 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</sub>"))]
              [(get weights [:element :alt 91] 100)
                (gen/tuple
                  (gen/return "<summary")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:summary-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 91 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 91 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</summary>"))]
              [(get weights [:element :alt 92] 100)
                (gen/tuple
                  (gen/return "<sup")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:sup-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 92 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 92 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</sup>"))]
              [(get weights [:element :alt 93] 100)
                (gen/tuple
                  (gen/return "<table")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:table-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 93 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 93 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</table>"))]
              [(get weights [:element :alt 94] 100)
                (gen/tuple
                  (gen/return "<tbody")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:tbody-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 94 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 94 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</tbody>"))]
              [(get weights [:element :alt 95] 100)
                (gen/tuple
                  (gen/return "<td")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:td-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 95 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 95 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</td>"))]
              [(get weights [:element :alt 96] 100)
                (gen/tuple
                  (gen/return "<template")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:template-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 96 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 96 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</template>"))]
              [(get weights [:element :alt 97] 100)
                (gen/tuple
                  (gen/return "<textarea")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:textarea-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 97 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 97 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</textarea>"))]
              [(get weights [:element :alt 98] 100)
                (gen/tuple
                  (gen/return "<tfoot")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:tfoot-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 98 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 98 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</tfoot>"))]
              [(get weights [:element :alt 99] 100)
                (gen/tuple
                  (gen/return "<th")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:th-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 99 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 99 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</th>"))]
              [(get weights [:element :alt 100] 100)
                (gen/tuple
                  (gen/return "<thead")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:thead-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 100 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 100 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</thead>"))]
              [(get weights [:element :alt 101] 100)
                (gen/tuple
                  (gen/return "<time")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:time-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 101 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 101 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</time>"))]
              [(get weights [:element :alt 102] 100)
                (gen/tuple
                  (gen/return "<tr")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:tr-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 102 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 102 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</tr>"))]
              [(get weights [:element :alt 103] 100)
                (gen/tuple
                  (gen/return "<track")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:track-attribute gmap)))
                  (gen/return ">"))]
              [(get weights [:element :alt 104] 100)
                (gen/tuple
                  (gen/return "<u")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:u-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 104 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 104 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</u>"))]
              [(get weights [:element :alt 105] 100)
                (gen/tuple
                  (gen/return "<ul")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:ul-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 105 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 105 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</ul>"))]
              [(get weights [:element :alt 106] 100)
                (gen/tuple
                  (gen/return "<var")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:var-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 106 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 106 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</var>"))]
              [(get weights [:element :alt 107] 100)
                (gen/tuple
                  (gen/return "<video")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:video-attribute gmap)))
                  (gen/return ">")
                  (gen/vector
                    (igen/freq [
                      [(get weights [:element :alt 107 :cat 3 :star :alt 0] 100)
                        inner]
                      [(get weights [:element :alt 107 :cat 3 :star :alt 1] 100)
                        (:content gmap)]]))
                  (gen/return "</video>"))]
              [(get weights [:element :alt 108] 100)
                (gen/tuple
                  (gen/return "<wbr")
                  (gen/vector
                    (gen/tuple
                      (:rS gmap)
                      (:wbr-attribute gmap)))
                  (gen/return ">"))]]))
          (igen/freq [
            [(get weights [:element :alt 0] 100)
              (gen/tuple
                (gen/return "<a")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:a-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</a>"))]
            [(get weights [:element :alt 1] 100)
              (gen/tuple
                (gen/return "<abbr")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:abbr-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</abbr>"))]
            [(get weights [:element :alt 2] 100)
              (gen/tuple
                (gen/return "<address")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:address-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</address>"))]
            [(get weights [:element :alt 3] 100)
              (gen/tuple
                (gen/return "<area")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:area-attribute gmap)))
                (gen/return ">"))]
            [(get weights [:element :alt 4] 100)
              (gen/tuple
                (gen/return "<article")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:article-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</article>"))]
            [(get weights [:element :alt 5] 100)
              (gen/tuple
                (gen/return "<aside")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:aside-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</aside>"))]
            [(get weights [:element :alt 6] 100)
              (gen/tuple
                (gen/return "<audio")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:audio-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</audio>"))]
            [(get weights [:element :alt 7] 100)
              (gen/tuple
                (gen/return "<b")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:b-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</b>"))]
            [(get weights [:element :alt 8] 100)
              (gen/tuple
                (gen/return "<base")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:base-attribute gmap)))
                (gen/return ">"))]
            [(get weights [:element :alt 9] 100)
              (gen/tuple
                (gen/return "<bdi")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:bdi-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</bdi>"))]
            [(get weights [:element :alt 10] 100)
              (gen/tuple
                (gen/return "<bdo")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:bdo-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</bdo>"))]
            [(get weights [:element :alt 11] 100)
              (gen/tuple
                (gen/return "<blockquote")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:blockquote-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</blockquote>"))]
            [(get weights [:element :alt 12] 100)
              (gen/tuple
                (gen/return "<br")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:br-attribute gmap)))
                (gen/return ">"))]
            [(get weights [:element :alt 13] 100)
              (gen/tuple
                (gen/return "<button")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:button-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</button>"))]
            [(get weights [:element :alt 14] 100)
              (gen/tuple
                (gen/return "<canvas")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:canvas-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</canvas>"))]
            [(get weights [:element :alt 15] 100)
              (gen/tuple
                (gen/return "<caption")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:caption-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</caption>"))]
            [(get weights [:element :alt 16] 100)
              (gen/tuple
                (gen/return "<cite")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:cite-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</cite>"))]
            [(get weights [:element :alt 17] 100)
              (gen/tuple
                (gen/return "<code")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:code-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</code>"))]
            [(get weights [:element :alt 18] 100)
              (gen/tuple
                (gen/return "<col")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:col-attribute gmap)))
                (gen/return ">"))]
            [(get weights [:element :alt 19] 100)
              (gen/tuple
                (gen/return "<colgroup")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:colgroup-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</colgroup>"))]
            [(get weights [:element :alt 20] 100)
              (gen/tuple
                (gen/return "<data")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:data-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</data>"))]
            [(get weights [:element :alt 21] 100)
              (gen/tuple
                (gen/return "<datalist")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:datalist-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</datalist>"))]
            [(get weights [:element :alt 22] 100)
              (gen/tuple
                (gen/return "<dd")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:dd-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</dd>"))]
            [(get weights [:element :alt 23] 100)
              (gen/tuple
                (gen/return "<del")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:del-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</del>"))]
            [(get weights [:element :alt 24] 100)
              (gen/tuple
                (gen/return "<details")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:details-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</details>"))]
            [(get weights [:element :alt 25] 100)
              (gen/tuple
                (gen/return "<dfn")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:dfn-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</dfn>"))]
            [(get weights [:element :alt 26] 100)
              (gen/tuple
                (gen/return "<div")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:div-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</div>"))]
            [(get weights [:element :alt 27] 100)
              (gen/tuple
                (gen/return "<dl")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:dl-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</dl>"))]
            [(get weights [:element :alt 28] 100)
              (gen/tuple
                (gen/return "<dt")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:dt-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</dt>"))]
            [(get weights [:element :alt 29] 100)
              (gen/tuple
                (gen/return "<em")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:em-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</em>"))]
            [(get weights [:element :alt 30] 100)
              (gen/tuple
                (gen/return "<embed")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:embed-attribute gmap)))
                (gen/return ">"))]
            [(get weights [:element :alt 31] 100)
              (gen/tuple
                (gen/return "<fieldset")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:fieldset-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</fieldset>"))]
            [(get weights [:element :alt 32] 100)
              (gen/tuple
                (gen/return "<figcaption")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:figcaption-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</figcaption>"))]
            [(get weights [:element :alt 33] 100)
              (gen/tuple
                (gen/return "<figure")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:figure-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</figure>"))]
            [(get weights [:element :alt 34] 100)
              (gen/tuple
                (gen/return "<footer")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:footer-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</footer>"))]
            [(get weights [:element :alt 35] 100)
              (gen/tuple
                (gen/return "<form")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:form-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</form>"))]
            [(get weights [:element :alt 36] 100)
              (gen/tuple
                (gen/return "<h1")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:h1-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</h1>"))]
            [(get weights [:element :alt 37] 100)
              (gen/tuple
                (gen/return "<h2")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:h2-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</h2>"))]
            [(get weights [:element :alt 38] 100)
              (gen/tuple
                (gen/return "<h3")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:h3-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</h3>"))]
            [(get weights [:element :alt 39] 100)
              (gen/tuple
                (gen/return "<h4")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:h4-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</h4>"))]
            [(get weights [:element :alt 40] 100)
              (gen/tuple
                (gen/return "<h5")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:h5-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</h5>"))]
            [(get weights [:element :alt 41] 100)
              (gen/tuple
                (gen/return "<h6")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:h6-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</h6>"))]
            [(get weights [:element :alt 42] 100)
              (gen/tuple
                (gen/return "<header")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:header-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</header>"))]
            [(get weights [:element :alt 43] 100)
              (gen/tuple
                (gen/return "<hr")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:hr-attribute gmap)))
                (gen/return ">"))]
            [(get weights [:element :alt 44] 100)
              (gen/tuple
                (gen/return "<i")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:i-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</i>"))]
            [(get weights [:element :alt 45] 100)
              (gen/tuple
                (gen/return "<iframe")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:iframe-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</iframe>"))]
            [(get weights [:element :alt 46] 100)
              (gen/tuple
                (gen/return "<img")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:img-attribute gmap)))
                (gen/return ">"))]
            [(get weights [:element :alt 47] 100)
              (gen/tuple
                (gen/return "<input")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:input-attribute gmap)))
                (gen/return ">"))]
            [(get weights [:element :alt 48] 100)
              (gen/tuple
                (gen/return "<ins")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:ins-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</ins>"))]
            [(get weights [:element :alt 49] 100)
              (gen/tuple
                (gen/return "<kbd")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:kbd-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</kbd>"))]
            [(get weights [:element :alt 50] 100)
              (gen/tuple
                (gen/return "<keygen")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:keygen-attribute gmap)))
                (gen/return ">"))]
            [(get weights [:element :alt 51] 100)
              (gen/tuple
                (gen/return "<label")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:label-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</label>"))]
            [(get weights [:element :alt 52] 100)
              (gen/tuple
                (gen/return "<legend")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:legend-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</legend>"))]
            [(get weights [:element :alt 53] 100)
              (gen/tuple
                (gen/return "<li")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:li-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</li>"))]
            [(get weights [:element :alt 54] 100)
              (gen/tuple
                (gen/return "<link")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:link-attribute gmap)))
                (gen/return ">"))]
            [(get weights [:element :alt 55] 100)
              (gen/tuple
                (gen/return "<main")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:main-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</main>"))]
            [(get weights [:element :alt 56] 100)
              (gen/tuple
                (gen/return "<map")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:map-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</map>"))]
            [(get weights [:element :alt 57] 100)
              (gen/tuple
                (gen/return "<mark")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:mark-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</mark>"))]
            [(get weights [:element :alt 58] 100)
              (gen/tuple
                (gen/return "<menu")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:menu-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</menu>"))]
            [(get weights [:element :alt 59] 100)
              (gen/tuple
                (gen/return "<menuitem")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:menuitem-attribute gmap)))
                (gen/return ">"))]
            [(get weights [:element :alt 60] 100)
              (gen/tuple
                (gen/return "<meta")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:meta-attribute gmap)))
                (gen/return ">"))]
            [(get weights [:element :alt 61] 100)
              (gen/tuple
                (gen/return "<meter")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:meter-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</meter>"))]
            [(get weights [:element :alt 62] 100)
              (gen/tuple
                (gen/return "<nav")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:nav-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</nav>"))]
            [(get weights [:element :alt 63] 100)
              (gen/tuple
                (gen/return "<noscript")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:noscript-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</noscript>"))]
            [(get weights [:element :alt 64] 100)
              (gen/tuple
                (gen/return "<object")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:object-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</object>"))]
            [(get weights [:element :alt 65] 100)
              (gen/tuple
                (gen/return "<ol")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:ol-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</ol>"))]
            [(get weights [:element :alt 66] 100)
              (gen/tuple
                (gen/return "<optgroup")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:optgroup-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</optgroup>"))]
            [(get weights [:element :alt 67] 100)
              (gen/tuple
                (gen/return "<option")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:option-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</option>"))]
            [(get weights [:element :alt 68] 100)
              (gen/tuple
                (gen/return "<output")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:output-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</output>"))]
            [(get weights [:element :alt 69] 100)
              (gen/tuple
                (gen/return "<p")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:p-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</p>"))]
            [(get weights [:element :alt 70] 100)
              (gen/tuple
                (gen/return "<param")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:param-attribute gmap)))
                (gen/return ">"))]
            [(get weights [:element :alt 71] 100)
              (gen/tuple
                (gen/return "<picture")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:picture-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</picture>"))]
            [(get weights [:element :alt 72] 100)
              (gen/tuple
                (gen/return "<pre")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:pre-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</pre>"))]
            [(get weights [:element :alt 73] 100)
              (gen/tuple
                (gen/return "<progress")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:progress-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</progress>"))]
            [(get weights [:element :alt 74] 100)
              (gen/tuple
                (gen/return "<q")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:q-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</q>"))]
            [(get weights [:element :alt 75] 100)
              (gen/tuple
                (gen/return "<rb")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:rb-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</rb>"))]
            [(get weights [:element :alt 76] 100)
              (gen/tuple
                (gen/return "<rp")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:rp-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</rp>"))]
            [(get weights [:element :alt 77] 100)
              (gen/tuple
                (gen/return "<rt")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:rt-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</rt>"))]
            [(get weights [:element :alt 78] 100)
              (gen/tuple
                (gen/return "<rtc")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:rtc-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</rtc>"))]
            [(get weights [:element :alt 79] 100)
              (gen/tuple
                (gen/return "<ruby")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:ruby-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</ruby>"))]
            [(get weights [:element :alt 80] 100)
              (gen/tuple
                (gen/return "<s")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:s-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</s>"))]
            [(get weights [:element :alt 81] 100)
              (gen/tuple
                (gen/return "<samp")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:samp-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</samp>"))]
            [(get weights [:element :alt 82] 100)
              (gen/tuple
                (gen/return "<script")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:script-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</script>"))]
            [(get weights [:element :alt 83] 100)
              (gen/tuple
                (gen/return "<section")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:section-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</section>"))]
            [(get weights [:element :alt 84] 100)
              (gen/tuple
                (gen/return "<select")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:select-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</select>"))]
            [(get weights [:element :alt 85] 100)
              (gen/tuple
                (gen/return "<small")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:small-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</small>"))]
            [(get weights [:element :alt 86] 100)
              (gen/tuple
                (gen/return "<source")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:source-attribute gmap)))
                (gen/return ">"))]
            [(get weights [:element :alt 87] 100)
              (gen/tuple
                (gen/return "<span")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:span-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</span>"))]
            [(get weights [:element :alt 88] 100)
              (gen/tuple
                (gen/return "<strong")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:strong-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</strong>"))]
            [(get weights [:element :alt 89] 100)
              (gen/tuple
                (gen/return "<style")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:style-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</style>"))]
            [(get weights [:element :alt 90] 100)
              (gen/tuple
                (gen/return "<sub")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:sub-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</sub>"))]
            [(get weights [:element :alt 91] 100)
              (gen/tuple
                (gen/return "<summary")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:summary-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</summary>"))]
            [(get weights [:element :alt 92] 100)
              (gen/tuple
                (gen/return "<sup")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:sup-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</sup>"))]
            [(get weights [:element :alt 93] 100)
              (gen/tuple
                (gen/return "<table")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:table-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</table>"))]
            [(get weights [:element :alt 94] 100)
              (gen/tuple
                (gen/return "<tbody")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:tbody-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</tbody>"))]
            [(get weights [:element :alt 95] 100)
              (gen/tuple
                (gen/return "<td")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:td-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</td>"))]
            [(get weights [:element :alt 96] 100)
              (gen/tuple
                (gen/return "<template")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:template-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</template>"))]
            [(get weights [:element :alt 97] 100)
              (gen/tuple
                (gen/return "<textarea")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:textarea-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</textarea>"))]
            [(get weights [:element :alt 98] 100)
              (gen/tuple
                (gen/return "<tfoot")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:tfoot-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</tfoot>"))]
            [(get weights [:element :alt 99] 100)
              (gen/tuple
                (gen/return "<th")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:th-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</th>"))]
            [(get weights [:element :alt 100] 100)
              (gen/tuple
                (gen/return "<thead")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:thead-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</thead>"))]
            [(get weights [:element :alt 101] 100)
              (gen/tuple
                (gen/return "<time")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:time-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</time>"))]
            [(get weights [:element :alt 102] 100)
              (gen/tuple
                (gen/return "<tr")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:tr-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</tr>"))]
            [(get weights [:element :alt 103] 100)
              (gen/tuple
                (gen/return "<track")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:track-attribute gmap)))
                (gen/return ">"))]
            [(get weights [:element :alt 104] 100)
              (gen/tuple
                (gen/return "<u")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:u-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</u>"))]
            [(get weights [:element :alt 105] 100)
              (gen/tuple
                (gen/return "<ul")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:ul-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</ul>"))]
            [(get weights [:element :alt 106] 100)
              (gen/tuple
                (gen/return "<var")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:var-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</var>"))]
            [(get weights [:element :alt 107] 100)
              (gen/tuple
                (gen/return "<video")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:video-attribute gmap)))
                (gen/return ">")
                (gen/vector
                  (:content gmap))
                (gen/return "</video>"))]
            [(get weights [:element :alt 108] 100)
              (gen/tuple
                (gen/return "<wbr")
                (gen/vector
                  (gen/tuple
                    (:rS gmap)
                    (:wbr-attribute gmap)))
                (gen/return ">"))]]))
        gmap (assoc gmap :element gen-element)

        gen-body
        (gen/tuple
          (gen/return "<body")
          (gen/vector
            (gen/tuple
              (:rS gmap)
              (:body-attribute gmap)))
          (gen/return ">")
          (gen/return "x")
          (gen/vector
            (igen/freq [
              [(get weights [:body :cat 4 :star :alt 0] 100)
                (:element gmap)]
              [(get weights [:body :cat 4 :star :alt 1] 100)
                (:content gmap)]]))
          (gen/return "</body>"))
        gmap (assoc gmap :body gen-body)

        gen-rend-css
        (gen/return "<link rel=\"stylesheet\" href=\"../static/rend.css\">")
        gmap (assoc gmap :rend-css gen-rend-css)

        gen-title-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :title-attribute gen-title-attribute)

        gen-normalize-css
        (gen/return "<link rel=\"stylesheet\" href=\"../static/normalize.css\">")
        gmap (assoc gmap :normalize-css gen-normalize-css)]
    gmap))

(defn- html5-generators-part-7 [gmap weights]
  (let [
        gen-title
        (gen/tuple
          (gen/return "<title")
          (gen/vector
            (gen/tuple
              (:rS gmap)
              (:title-attribute gmap)))
          (gen/return ">")
          (gen/vector
            (:content gmap))
          (gen/return "</title>"))
        gmap (assoc gmap :title gen-title)

        gen-head
        (gen/tuple
          (gen/return "<head>")
          (:normalize-css gmap)
          (:rend-css gmap)
          (gen/one-of [
            (gen/return "")
            (:title gmap)])
          (gen/return "</head>"))
        gmap (assoc gmap :head gen-head)

        gen-html
        (gen/tuple
          (gen/return "<html>")
          (:head gmap)
          (:body gmap)
          (gen/return "</html>"))
        gmap (assoc gmap :html gen-html)

        gen-S
        (gen/return "")
        gmap (assoc gmap :S gen-S)

        gen-url-generic
        (chuck/string-from-regex #"[A-Za-z0-9$-_@.&+%=;/#?:]+")
        gmap (assoc gmap :url-generic gen-url-generic)

        gen-html-attribute
        (igen/freq [
          [(get weights [:html-attribute :alt 0] 100)
            (gen/tuple
              (gen/return "xmlns=\"")
              (:url-generic gmap)
              (gen/return "\""))]
          [(get weights [:html-attribute :alt 1] 100)
            (gen/tuple
              (gen/return "xml:lang=\"")
              (:lang gmap)
              (gen/return "\""))]
          [(get weights [:html-attribute :alt 2] 100)
            (gen/tuple
              (gen/return "prefix=\"")
              (chuck/string-from-regex #"[^\"]*")
              (gen/return "\""))]
          [(get weights [:html-attribute :alt 3] 100)
            (:global-attribute gmap)]])
        gmap (assoc gmap :html-attribute gen-html-attribute)

        gen-comment-generic
        (chuck/string-from-regex #"<!--(?:[^-]|-[^-])*-->")
        gmap (assoc gmap :comment-generic gen-comment-generic)

        gen-attribute-value
        (igen/freq [
          [(get weights [:attribute-value :alt 0] 100)
            (gen/tuple
              (gen/return "\"")
              (gen/vector
                (igen/freq [
                  [(get weights [:attribute-value :alt 0 :cat 1 :star :alt 0] 100)
                    (chuck/string-from-regex #"[A-Za-z0-9_<>/\\ .]*")]
                  [(get weights [:attribute-value :alt 0 :cat 1 :star :alt 1] 100)
                    (:reference gmap)]]))
              (gen/return "\""))]
          [(get weights [:attribute-value :alt 1] 100)
            (gen/tuple
              (gen/return "'")
              (gen/vector
                (igen/freq [
                  [(get weights [:attribute-value :alt 1 :cat 1 :star :alt 0] 100)
                    (chuck/string-from-regex #"[A-Za-z0-9_<>/\\ .]*")]
                  [(get weights [:attribute-value :alt 1 :cat 1 :star :alt 1] 100)
                    (:reference gmap)]]))
              (gen/return "'"))]])
        gmap (assoc gmap :attribute-value gen-attribute-value)

        gen-charset
        (igen/freq [
          [(get weights [:charset :alt 0] 100)
            (gen/return "UTF-8")]
          [(get weights [:charset :alt 1] 100)
            (gen/return "utf-8")]
          [(get weights [:charset :alt 2] 100)
            (gen/return "iso-8859-15")]])
        gmap (assoc gmap :charset gen-charset)

        gen-attr-val-style
        (:css-assignments gmap)
        gmap (assoc gmap :attr-val-style gen-attr-val-style)

        gen-head-attribute
        (:global-attribute gmap)
        gmap (assoc gmap :head-attribute gen-head-attribute)

        gen-attr-val-img__srcset
        (igen/freq [
          [(get weights [:attr-val-img__srcset :alt 0] 100)
            (gen/return "")]
          [(get weights [:attr-val-img__srcset :alt 1] 100)
            (gen/return "STUB image candidate strings")]])
        gmap (assoc gmap :attr-val-img__srcset gen-attr-val-img__srcset)

        gen-attribute
        (gen/tuple
          (:name gmap)
          (:S gmap)
          (gen/return "=")
          (:S gmap)
          (:attribute-value gmap))
        gmap (assoc gmap :attribute gen-attribute)

        gen-char-data-generic
        (chuck/string-from-regex #"[^<&]*")
        gmap (assoc gmap :char-data-generic gen-char-data-generic)

        gen-number-float
        (chuck/string-from-regex #"-?[0-9]*.[0-9]+")
        gmap (assoc gmap :number-float gen-number-float)]
    gmap))

(defn html5-generators [& [gmap weights]]
  (let [gmap (or gmap {})
        gmap (html5-generators-part-0 gmap weights)
        gmap (html5-generators-part-1 gmap weights)
        gmap (html5-generators-part-2 gmap weights)
        gmap (html5-generators-part-3 gmap weights)
        gmap (html5-generators-part-4 gmap weights)
        gmap (html5-generators-part-5 gmap weights)
        gmap (html5-generators-part-6 gmap weights)
        gmap (html5-generators-part-7 gmap weights)]
    gmap))