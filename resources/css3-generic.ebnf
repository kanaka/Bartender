(* Basic CSS rules based on: https://www.w3.org/TR/CSS21/grammar.html *)

stylesheet = S ( css-ruleset | css-at-rule | css-comment )* ;

css-ruleset = css-selector [ ',' S css-selector ]* '{' S css-assignments '}' S ;

css-at-rule = prop-@charset
	    | prop-@counter-style
	    | prop-@font-face
	    | prop-@font-feature-values
	    | prop-@import
	    | prop-@keyframes
	    | prop-@media
	    | prop-@namespace
	    | prop-@page
	    | prop-@supports
	    | prop-@viewport

css-comment = '/*' ( #"[^*]*" | #'[*][^/]' )* '*/' S ;

(*
css-selector = css-simple-selector [ css-combinator css-selector | S+ [ css-combinator? css-selector ]? ]? ;

css-simple-selector = css-sel-type
                    | css-sel-class
                    | css-sel-id
                    | css-sel-all
                    | css-sel-attr

css-simple-selector = css-element [ css-id | css-class | css-pseudo ]*
                    | [ css-id | css-class | css-pseudo ]+ ;

css-combinator = '+' S
               | '>' S ;

css-element = IDENT
            | '*' ;
css-id      = '#' NAME ;
css-class   = '.' IDENT ;
css-pseudo  = ':' [ IDENT | IDENT '(' S [IDENT S]? ')' ] ;

*)


css-selector = css-simple-selector-sequence [ css-combinator css-simple-selector-sequence ]* ;

css-combinator = '+' S
               | '>' S
               | '~' S
               | rS ;

css-simple-selector-sequence = [ css-type | css-univ ]
                               [ css-hash | css-class | css-attr | css-psuedo | css-negate ]*
                             | [ css-hash | css-class | css-attr | css-psuedo | css-negate ]+ ;

css-ns-pre = [ IDENT | '*' ]? '|' ;
css-type   = [ css-ns-pre ]? IDENT ;
css-univ   = [ css-ns-pre ]? '*' ;
css-hash   = '#' IDENT ;
css-class  = '.' IDENT ;
css-attr   = '[' S [ css-ns-pre ]? IDENT S
             [
               [
                 '^=' |
                 '$=' |
                 '*=' |
                 '='  |
                 '~=' |
                 '|='
               ]
               S [ IDENT | STRING ] S
             ]?
             ']' S ;
css-psuedo = ':' ':'? [ IDENT | css-func ] ;
css-func   = IDENT '(' S css-expr ')' S ;
css-expr   = [ [ '+' | '-' | NUMBER '%' | NUMBER | STRING | IDENT ] S ]+ ;
css-negate = ':not(' S [ css-type | css-univ | css-hash | css-class | css-attr | css-psuedo ] S ')' ;


NAME        = #'[_A-Za-z0-9-]+' ;
IDENT       = #'-?[_A-Za-z][_A-Za-z0-9-]*' ;
STRING      = #'"[^"]*"'
            | #"'[^']*'" ;
NUMBER      = #"[0-9]+"
            | #"[0-9]*\.[0-9]+" ;
